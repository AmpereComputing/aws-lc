package main

// Code generated by ~/go/bin/peg delocate.peg DO NOT EDIT.

import (
	"fmt"
	"io"
	"os"
	"sort"
	"strconv"
	"strings"
)

const endSymbol rune = 1114112

/* The rule types inferred from the grammar are below. */
type pegRule uint8

const (
	ruleUnknown pegRule = iota
	ruleAsmFile
	ruleStatement
	ruleGlobalDirective
	ruleDirective
	ruleDirectiveName
	ruleLocationDirective
	ruleFileDirective
	ruleLocDirective
	ruleArgs
	ruleArg
	ruleQuotedArg
	ruleQuotedText
	ruleLabelContainingDirective
	ruleLabelContainingDirectiveName
	ruleSymbolArgs
	ruleSymbolArg
	ruleSymbolExpr
	ruleSymbolAtom
	ruleSymbolOperator
	ruleOpenParen
	ruleCloseParen
	ruleSymbolType
	ruleDot
	ruleTCMarker
	ruleEscapedChar
	ruleWS
	ruleComment
	ruleLabel
	ruleSymbolName
	ruleLocalSymbol
	ruleLocalLabel
	ruleLocalLabelRef
	ruleInstruction
	ruleInstructionName
	ruleInstructionArg
	ruleGOTLocation
	ruleGOTSymbolOffset
	ruleAVX512Token
	ruleTOCRefHigh
	ruleTOCRefLow
	ruleIndirectionIndicator
	ruleRegisterOrConstant
	ruleARMConstantTweak
	ruleARMRegister
	ruleARMVectorRegister
	ruleMemoryRef
	ruleSymbolRef
	ruleLow12BitsSymbolRef
	ruleARMBaseIndexScale
	ruleARMGOTLow12
	ruleARMPostincrement
	ruleBaseIndexScale
	ruleOperator
	ruleOffsetOperator
	ruleOffset
	ruleSection
	ruleSegmentRegister
)

var rul3s = [...]string{
	"Unknown",
	"AsmFile",
	"Statement",
	"GlobalDirective",
	"Directive",
	"DirectiveName",
	"LocationDirective",
	"FileDirective",
	"LocDirective",
	"Args",
	"Arg",
	"QuotedArg",
	"QuotedText",
	"LabelContainingDirective",
	"LabelContainingDirectiveName",
	"SymbolArgs",
	"SymbolArg",
	"SymbolExpr",
	"SymbolAtom",
	"SymbolOperator",
	"OpenParen",
	"CloseParen",
	"SymbolType",
	"Dot",
	"TCMarker",
	"EscapedChar",
	"WS",
	"Comment",
	"Label",
	"SymbolName",
	"LocalSymbol",
	"LocalLabel",
	"LocalLabelRef",
	"Instruction",
	"InstructionName",
	"InstructionArg",
	"GOTLocation",
	"GOTSymbolOffset",
	"AVX512Token",
	"TOCRefHigh",
	"TOCRefLow",
	"IndirectionIndicator",
	"RegisterOrConstant",
	"ARMConstantTweak",
	"ARMRegister",
	"ARMVectorRegister",
	"MemoryRef",
	"SymbolRef",
	"Low12BitsSymbolRef",
	"ARMBaseIndexScale",
	"ARMGOTLow12",
	"ARMPostincrement",
	"BaseIndexScale",
	"Operator",
	"OffsetOperator",
	"Offset",
	"Section",
	"SegmentRegister",
}

type token32 struct {
	pegRule
	begin, end uint32
}

func (t *token32) String() string {
	return fmt.Sprintf("\x1B[34m%v\x1B[m %v %v", rul3s[t.pegRule], t.begin, t.end)
}

type node32 struct {
	token32
	up, next *node32
}

func (node *node32) print(w io.Writer, pretty bool, buffer string) {
	var print func(node *node32, depth int)
	print = func(node *node32, depth int) {
		for node != nil {
			for c := 0; c < depth; c++ {
				fmt.Fprintf(w, " ")
			}
			rule := rul3s[node.pegRule]
			quote := strconv.Quote(string(([]rune(buffer)[node.begin:node.end])))
			if !pretty {
				fmt.Fprintf(w, "%v %v\n", rule, quote)
			} else {
				fmt.Fprintf(w, "\x1B[36m%v\x1B[m %v\n", rule, quote)
			}
			if node.up != nil {
				print(node.up, depth+1)
			}
			node = node.next
		}
	}
	print(node, 0)
}

func (node *node32) Print(w io.Writer, buffer string) {
	node.print(w, false, buffer)
}

func (node *node32) PrettyPrint(w io.Writer, buffer string) {
	node.print(w, true, buffer)
}

type tokens32 struct {
	tree []token32
}

func (t *tokens32) Trim(length uint32) {
	t.tree = t.tree[:length]
}

func (t *tokens32) Print() {
	for _, token := range t.tree {
		fmt.Println(token.String())
	}
}

func (t *tokens32) AST() *node32 {
	type element struct {
		node *node32
		down *element
	}
	tokens := t.Tokens()
	var stack *element
	for _, token := range tokens {
		if token.begin == token.end {
			continue
		}
		node := &node32{token32: token}
		for stack != nil && stack.node.begin >= token.begin && stack.node.end <= token.end {
			stack.node.next = node.up
			node.up = stack.node
			stack = stack.down
		}
		stack = &element{node: node, down: stack}
	}
	if stack != nil {
		return stack.node
	}
	return nil
}

func (t *tokens32) PrintSyntaxTree(buffer string) {
	t.AST().Print(os.Stdout, buffer)
}

func (t *tokens32) WriteSyntaxTree(w io.Writer, buffer string) {
	t.AST().Print(w, buffer)
}

func (t *tokens32) PrettyPrintSyntaxTree(buffer string) {
	t.AST().PrettyPrint(os.Stdout, buffer)
}

func (t *tokens32) Add(rule pegRule, begin, end, index uint32) {
	tree, i := t.tree, int(index)
	if i >= len(tree) {
		t.tree = append(tree, token32{pegRule: rule, begin: begin, end: end})
		return
	}
	tree[i] = token32{pegRule: rule, begin: begin, end: end}
}

func (t *tokens32) Tokens() []token32 {
	return t.tree
}

type Asm struct {
	Buffer string
	buffer []rune
	rules  [58]func() bool
	parse  func(rule ...int) error
	reset  func()
	Pretty bool
	tokens32
}

func (p *Asm) Parse(rule ...int) error {
	return p.parse(rule...)
}

func (p *Asm) Reset() {
	p.reset()
}

type textPosition struct {
	line, symbol int
}

type textPositionMap map[int]textPosition

func translatePositions(buffer []rune, positions []int) textPositionMap {
	length, translations, j, line, symbol := len(positions), make(textPositionMap, len(positions)), 0, 1, 0
	sort.Ints(positions)

search:
	for i, c := range buffer {
		if c == '\n' {
			line, symbol = line+1, 0
		} else {
			symbol++
		}
		if i == positions[j] {
			translations[positions[j]] = textPosition{line, symbol}
			for j++; j < length; j++ {
				if i != positions[j] {
					continue search
				}
			}
			break search
		}
	}

	return translations
}

type parseError struct {
	p   *Asm
	max token32
}

func (e *parseError) Error() string {
	tokens, err := []token32{e.max}, "\n"
	positions, p := make([]int, 2*len(tokens)), 0
	for _, token := range tokens {
		positions[p], p = int(token.begin), p+1
		positions[p], p = int(token.end), p+1
	}
	translations := translatePositions(e.p.buffer, positions)
	format := "parse error near %v (line %v symbol %v - line %v symbol %v):\n%v\n"
	if e.p.Pretty {
		format = "parse error near \x1B[34m%v\x1B[m (line %v symbol %v - line %v symbol %v):\n%v\n"
	}
	for _, token := range tokens {
		begin, end := int(token.begin), int(token.end)
		err += fmt.Sprintf(format,
			rul3s[token.pegRule],
			translations[begin].line, translations[begin].symbol,
			translations[end].line, translations[end].symbol,
			strconv.Quote(string(e.p.buffer[begin:end])))
	}

	return err
}

func (p *Asm) PrintSyntaxTree() {
	if p.Pretty {
		p.tokens32.PrettyPrintSyntaxTree(p.Buffer)
	} else {
		p.tokens32.PrintSyntaxTree(p.Buffer)
	}
}

func (p *Asm) WriteSyntaxTree(w io.Writer) {
	p.tokens32.WriteSyntaxTree(w, p.Buffer)
}

func (p *Asm) SprintSyntaxTree() string {
	var bldr strings.Builder
	p.WriteSyntaxTree(&bldr)
	return bldr.String()
}

func Pretty(pretty bool) func(*Asm) error {
	return func(p *Asm) error {
		p.Pretty = pretty
		return nil
	}
}

func Size(size int) func(*Asm) error {
	return func(p *Asm) error {
		p.tokens32 = tokens32{tree: make([]token32, 0, size)}
		return nil
	}
}
func (p *Asm) Init(options ...func(*Asm) error) error {
	var (
		max                  token32
		position, tokenIndex uint32
		buffer               []rune
	)
	for _, option := range options {
		err := option(p)
		if err != nil {
			return err
		}
	}
	p.reset = func() {
		max = token32{}
		position, tokenIndex = 0, 0

		p.buffer = []rune(p.Buffer)
		if len(p.buffer) == 0 || p.buffer[len(p.buffer)-1] != endSymbol {
			p.buffer = append(p.buffer, endSymbol)
		}
		buffer = p.buffer
	}
	p.reset()

	_rules := p.rules
	tree := p.tokens32
	p.parse = func(rule ...int) error {
		r := 1
		if len(rule) > 0 {
			r = rule[0]
		}
		matches := p.rules[r]()
		p.tokens32 = tree
		if matches {
			p.Trim(tokenIndex)
			return nil
		}
		return &parseError{p, max}
	}

	add := func(rule pegRule, begin uint32) {
		tree.Add(rule, begin, position, tokenIndex)
		tokenIndex++
		if begin != position && position > max.end {
			max = token32{rule, begin, position}
		}
	}

	matchDot := func() bool {
		if buffer[position] != endSymbol {
			position++
			return true
		}
		return false
	}

	/*matchChar := func(c byte) bool {
		if buffer[position] == c {
			position++
			return true
		}
		return false
	}*/

	/*matchRange := func(lower byte, upper byte) bool {
		if c := buffer[position]; c >= lower && c <= upper {
			position++
			return true
		}
		return false
	}*/

	_rules = [...]func() bool{
		nil,
		/* 0 AsmFile <- <(Statement* !.)> */
		func() bool {
			position0, tokenIndex0 := position, tokenIndex
			{
				position1 := position
			l2:
				{
					position3, tokenIndex3 := position, tokenIndex
					if !_rules[ruleStatement]() {
						goto l3
					}
					goto l2
				l3:
					position, tokenIndex = position3, tokenIndex3
				}
				{
					position4, tokenIndex4 := position, tokenIndex
					if !matchDot() {
						goto l4
					}
					goto l0
				l4:
					position, tokenIndex = position4, tokenIndex4
				}
				add(ruleAsmFile, position1)
			}
			return true
		l0:
			position, tokenIndex = position0, tokenIndex0
			return false
		},
		/* 1 Statement <- <(WS? (Label / ((GlobalDirective / LocationDirective / LabelContainingDirective / Instruction / Directive / Comment / ) WS? ((Comment? '\n') / ';'))))> */
		func() bool {
			position5, tokenIndex5 := position, tokenIndex
			{
				position6 := position
				{
					position7, tokenIndex7 := position, tokenIndex
					if !_rules[ruleWS]() {
						goto l7
					}
					goto l8
				l7:
					position, tokenIndex = position7, tokenIndex7
				}
			l8:
				{
					position9, tokenIndex9 := position, tokenIndex
					if !_rules[ruleLabel]() {
						goto l10
					}
					goto l9
				l10:
					position, tokenIndex = position9, tokenIndex9
					{
						position11, tokenIndex11 := position, tokenIndex
						if !_rules[ruleGlobalDirective]() {
							goto l12
						}
						goto l11
					l12:
						position, tokenIndex = position11, tokenIndex11
						if !_rules[ruleLocationDirective]() {
							goto l13
						}
						goto l11
					l13:
						position, tokenIndex = position11, tokenIndex11
						if !_rules[ruleLabelContainingDirective]() {
							goto l14
						}
						goto l11
					l14:
						position, tokenIndex = position11, tokenIndex11
						if !_rules[ruleInstruction]() {
							goto l15
						}
						goto l11
					l15:
						position, tokenIndex = position11, tokenIndex11
						if !_rules[ruleDirective]() {
							goto l16
						}
						goto l11
					l16:
						position, tokenIndex = position11, tokenIndex11
						if !_rules[ruleComment]() {
							goto l17
						}
						goto l11
					l17:
						position, tokenIndex = position11, tokenIndex11
					}
				l11:
					{
						position18, tokenIndex18 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l18
						}
						goto l19
					l18:
						position, tokenIndex = position18, tokenIndex18
					}
				l19:
					{
						position20, tokenIndex20 := position, tokenIndex
						{
							position22, tokenIndex22 := position, tokenIndex
							if !_rules[ruleComment]() {
								goto l22
							}
							goto l23
						l22:
							position, tokenIndex = position22, tokenIndex22
						}
					l23:
						if buffer[position] != rune('\n') {
							goto l21
						}
						position++
						goto l20
					l21:
						position, tokenIndex = position20, tokenIndex20
						if buffer[position] != rune(';') {
							goto l5
						}
						position++
					}
				l20:
				}
			l9:
				add(ruleStatement, position6)
			}
			return true
		l5:
			position, tokenIndex = position5, tokenIndex5
			return false
		},
		/* 2 GlobalDirective <- <((('.' ('g' / 'G') ('l' / 'L') ('o' / 'O') ('b' / 'B') ('a' / 'A') ('l' / 'L')) / ('.' ('g' / 'G') ('l' / 'L') ('o' / 'O') ('b' / 'B') ('l' / 'L'))) WS SymbolName)> */
		func() bool {
			position24, tokenIndex24 := position, tokenIndex
			{
				position25 := position
				{
					position26, tokenIndex26 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l27
					}
					position++
					{
						position28, tokenIndex28 := position, tokenIndex
						if buffer[position] != rune('g') {
							goto l29
						}
						position++
						goto l28
					l29:
						position, tokenIndex = position28, tokenIndex28
						if buffer[position] != rune('G') {
							goto l27
						}
						position++
					}
				l28:
					{
						position30, tokenIndex30 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l31
						}
						position++
						goto l30
					l31:
						position, tokenIndex = position30, tokenIndex30
						if buffer[position] != rune('L') {
							goto l27
						}
						position++
					}
				l30:
					{
						position32, tokenIndex32 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l33
						}
						position++
						goto l32
					l33:
						position, tokenIndex = position32, tokenIndex32
						if buffer[position] != rune('O') {
							goto l27
						}
						position++
					}
				l32:
					{
						position34, tokenIndex34 := position, tokenIndex
						if buffer[position] != rune('b') {
							goto l35
						}
						position++
						goto l34
					l35:
						position, tokenIndex = position34, tokenIndex34
						if buffer[position] != rune('B') {
							goto l27
						}
						position++
					}
				l34:
					{
						position36, tokenIndex36 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l37
						}
						position++
						goto l36
					l37:
						position, tokenIndex = position36, tokenIndex36
						if buffer[position] != rune('A') {
							goto l27
						}
						position++
					}
				l36:
					{
						position38, tokenIndex38 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l39
						}
						position++
						goto l38
					l39:
						position, tokenIndex = position38, tokenIndex38
						if buffer[position] != rune('L') {
							goto l27
						}
						position++
					}
				l38:
					goto l26
				l27:
					position, tokenIndex = position26, tokenIndex26
					if buffer[position] != rune('.') {
						goto l24
					}
					position++
					{
						position40, tokenIndex40 := position, tokenIndex
						if buffer[position] != rune('g') {
							goto l41
						}
						position++
						goto l40
					l41:
						position, tokenIndex = position40, tokenIndex40
						if buffer[position] != rune('G') {
							goto l24
						}
						position++
					}
				l40:
					{
						position42, tokenIndex42 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l43
						}
						position++
						goto l42
					l43:
						position, tokenIndex = position42, tokenIndex42
						if buffer[position] != rune('L') {
							goto l24
						}
						position++
					}
				l42:
					{
						position44, tokenIndex44 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l45
						}
						position++
						goto l44
					l45:
						position, tokenIndex = position44, tokenIndex44
						if buffer[position] != rune('O') {
							goto l24
						}
						position++
					}
				l44:
					{
						position46, tokenIndex46 := position, tokenIndex
						if buffer[position] != rune('b') {
							goto l47
						}
						position++
						goto l46
					l47:
						position, tokenIndex = position46, tokenIndex46
						if buffer[position] != rune('B') {
							goto l24
						}
						position++
					}
				l46:
					{
						position48, tokenIndex48 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l49
						}
						position++
						goto l48
					l49:
						position, tokenIndex = position48, tokenIndex48
						if buffer[position] != rune('L') {
							goto l24
						}
						position++
					}
				l48:
				}
			l26:
				if !_rules[ruleWS]() {
					goto l24
				}
				if !_rules[ruleSymbolName]() {
					goto l24
				}
				add(ruleGlobalDirective, position25)
			}
			return true
		l24:
			position, tokenIndex = position24, tokenIndex24
			return false
		},
		/* 3 Directive <- <('.' DirectiveName (WS Args)?)> */
		func() bool {
			position50, tokenIndex50 := position, tokenIndex
			{
				position51 := position
				if buffer[position] != rune('.') {
					goto l50
				}
				position++
				if !_rules[ruleDirectiveName]() {
					goto l50
				}
				{
					position52, tokenIndex52 := position, tokenIndex
					if !_rules[ruleWS]() {
						goto l52
					}
					if !_rules[ruleArgs]() {
						goto l52
					}
					goto l53
				l52:
					position, tokenIndex = position52, tokenIndex52
				}
			l53:
				add(ruleDirective, position51)
			}
			return true
		l50:
			position, tokenIndex = position50, tokenIndex50
			return false
		},
		/* 4 DirectiveName <- <([a-z] / [A-Z] / ([0-9] / [0-9]) / '_')+> */
		func() bool {
			position54, tokenIndex54 := position, tokenIndex
			{
				position55 := position
				{
					position58, tokenIndex58 := position, tokenIndex
					if c := buffer[position]; c < rune('a') || c > rune('z') {
						goto l59
					}
					position++
					goto l58
				l59:
					position, tokenIndex = position58, tokenIndex58
					if c := buffer[position]; c < rune('A') || c > rune('Z') {
						goto l60
					}
					position++
					goto l58
				l60:
					position, tokenIndex = position58, tokenIndex58
					{
						position62, tokenIndex62 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l63
						}
						position++
						goto l62
					l63:
						position, tokenIndex = position62, tokenIndex62
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l61
						}
						position++
					}
				l62:
					goto l58
				l61:
					position, tokenIndex = position58, tokenIndex58
					if buffer[position] != rune('_') {
						goto l54
					}
					position++
				}
			l58:
			l56:
				{
					position57, tokenIndex57 := position, tokenIndex
					{
						position64, tokenIndex64 := position, tokenIndex
						if c := buffer[position]; c < rune('a') || c > rune('z') {
							goto l65
						}
						position++
						goto l64
					l65:
						position, tokenIndex = position64, tokenIndex64
						if c := buffer[position]; c < rune('A') || c > rune('Z') {
							goto l66
						}
						position++
						goto l64
					l66:
						position, tokenIndex = position64, tokenIndex64
						{
							position68, tokenIndex68 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l69
							}
							position++
							goto l68
						l69:
							position, tokenIndex = position68, tokenIndex68
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l67
							}
							position++
						}
					l68:
						goto l64
					l67:
						position, tokenIndex = position64, tokenIndex64
						if buffer[position] != rune('_') {
							goto l57
						}
						position++
					}
				l64:
					goto l56
				l57:
					position, tokenIndex = position57, tokenIndex57
				}
				add(ruleDirectiveName, position55)
			}
			return true
		l54:
			position, tokenIndex = position54, tokenIndex54
			return false
		},
		/* 5 LocationDirective <- <(FileDirective / LocDirective)> */
		func() bool {
			position70, tokenIndex70 := position, tokenIndex
			{
				position71 := position
				{
					position72, tokenIndex72 := position, tokenIndex
					if !_rules[ruleFileDirective]() {
						goto l73
					}
					goto l72
				l73:
					position, tokenIndex = position72, tokenIndex72
					if !_rules[ruleLocDirective]() {
						goto l70
					}
				}
			l72:
				add(ruleLocationDirective, position71)
			}
			return true
		l70:
			position, tokenIndex = position70, tokenIndex70
			return false
		},
		/* 6 FileDirective <- <('.' ('f' / 'F') ('i' / 'I') ('l' / 'L') ('e' / 'E') WS (!('#' / '\n') .)+)> */
		func() bool {
			position74, tokenIndex74 := position, tokenIndex
			{
				position75 := position
				if buffer[position] != rune('.') {
					goto l74
				}
				position++
				{
					position76, tokenIndex76 := position, tokenIndex
					if buffer[position] != rune('f') {
						goto l77
					}
					position++
					goto l76
				l77:
					position, tokenIndex = position76, tokenIndex76
					if buffer[position] != rune('F') {
						goto l74
					}
					position++
				}
			l76:
				{
					position78, tokenIndex78 := position, tokenIndex
					if buffer[position] != rune('i') {
						goto l79
					}
					position++
					goto l78
				l79:
					position, tokenIndex = position78, tokenIndex78
					if buffer[position] != rune('I') {
						goto l74
					}
					position++
				}
			l78:
				{
					position80, tokenIndex80 := position, tokenIndex
					if buffer[position] != rune('l') {
						goto l81
					}
					position++
					goto l80
				l81:
					position, tokenIndex = position80, tokenIndex80
					if buffer[position] != rune('L') {
						goto l74
					}
					position++
				}
			l80:
				{
					position82, tokenIndex82 := position, tokenIndex
					if buffer[position] != rune('e') {
						goto l83
					}
					position++
					goto l82
				l83:
					position, tokenIndex = position82, tokenIndex82
					if buffer[position] != rune('E') {
						goto l74
					}
					position++
				}
			l82:
				if !_rules[ruleWS]() {
					goto l74
				}
				{
					position86, tokenIndex86 := position, tokenIndex
					{
						position87, tokenIndex87 := position, tokenIndex
						if buffer[position] != rune('#') {
							goto l88
						}
						position++
						goto l87
					l88:
						position, tokenIndex = position87, tokenIndex87
						if buffer[position] != rune('\n') {
							goto l86
						}
						position++
					}
				l87:
					goto l74
				l86:
					position, tokenIndex = position86, tokenIndex86
				}
				if !matchDot() {
					goto l74
				}
			l84:
				{
					position85, tokenIndex85 := position, tokenIndex
					{
						position89, tokenIndex89 := position, tokenIndex
						{
							position90, tokenIndex90 := position, tokenIndex
							if buffer[position] != rune('#') {
								goto l91
							}
							position++
							goto l90
						l91:
							position, tokenIndex = position90, tokenIndex90
							if buffer[position] != rune('\n') {
								goto l89
							}
							position++
						}
					l90:
						goto l85
					l89:
						position, tokenIndex = position89, tokenIndex89
					}
					if !matchDot() {
						goto l85
					}
					goto l84
				l85:
					position, tokenIndex = position85, tokenIndex85
				}
				add(ruleFileDirective, position75)
			}
			return true
		l74:
			position, tokenIndex = position74, tokenIndex74
			return false
		},
		/* 7 LocDirective <- <('.' ('l' / 'L') ('o' / 'O') ('c' / 'C') WS (!('#' / '/' / '\n') .)+)> */
		func() bool {
			position92, tokenIndex92 := position, tokenIndex
			{
				position93 := position
				if buffer[position] != rune('.') {
					goto l92
				}
				position++
				{
					position94, tokenIndex94 := position, tokenIndex
					if buffer[position] != rune('l') {
						goto l95
					}
					position++
					goto l94
				l95:
					position, tokenIndex = position94, tokenIndex94
					if buffer[position] != rune('L') {
						goto l92
					}
					position++
				}
			l94:
				{
					position96, tokenIndex96 := position, tokenIndex
					if buffer[position] != rune('o') {
						goto l97
					}
					position++
					goto l96
				l97:
					position, tokenIndex = position96, tokenIndex96
					if buffer[position] != rune('O') {
						goto l92
					}
					position++
				}
			l96:
				{
					position98, tokenIndex98 := position, tokenIndex
					if buffer[position] != rune('c') {
						goto l99
					}
					position++
					goto l98
				l99:
					position, tokenIndex = position98, tokenIndex98
					if buffer[position] != rune('C') {
						goto l92
					}
					position++
				}
			l98:
				if !_rules[ruleWS]() {
					goto l92
				}
				{
					position102, tokenIndex102 := position, tokenIndex
					{
						position103, tokenIndex103 := position, tokenIndex
						if buffer[position] != rune('#') {
							goto l104
						}
						position++
						goto l103
					l104:
						position, tokenIndex = position103, tokenIndex103
						if buffer[position] != rune('/') {
							goto l105
						}
						position++
						goto l103
					l105:
						position, tokenIndex = position103, tokenIndex103
						if buffer[position] != rune('\n') {
							goto l102
						}
						position++
					}
				l103:
					goto l92
				l102:
					position, tokenIndex = position102, tokenIndex102
				}
				if !matchDot() {
					goto l92
				}
			l100:
				{
					position101, tokenIndex101 := position, tokenIndex
					{
						position106, tokenIndex106 := position, tokenIndex
						{
							position107, tokenIndex107 := position, tokenIndex
							if buffer[position] != rune('#') {
								goto l108
							}
							position++
							goto l107
						l108:
							position, tokenIndex = position107, tokenIndex107
							if buffer[position] != rune('/') {
								goto l109
							}
							position++
							goto l107
						l109:
							position, tokenIndex = position107, tokenIndex107
							if buffer[position] != rune('\n') {
								goto l106
							}
							position++
						}
					l107:
						goto l101
					l106:
						position, tokenIndex = position106, tokenIndex106
					}
					if !matchDot() {
						goto l101
					}
					goto l100
				l101:
					position, tokenIndex = position101, tokenIndex101
				}
				add(ruleLocDirective, position93)
			}
			return true
		l92:
			position, tokenIndex = position92, tokenIndex92
			return false
		},
		/* 8 Args <- <(Arg (WS? ',' WS? Arg)*)> */
		func() bool {
			position110, tokenIndex110 := position, tokenIndex
			{
				position111 := position
				if !_rules[ruleArg]() {
					goto l110
				}
			l112:
				{
					position113, tokenIndex113 := position, tokenIndex
					{
						position114, tokenIndex114 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l114
						}
						goto l115
					l114:
						position, tokenIndex = position114, tokenIndex114
					}
				l115:
					if buffer[position] != rune(',') {
						goto l113
					}
					position++
					{
						position116, tokenIndex116 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l116
						}
						goto l117
					l116:
						position, tokenIndex = position116, tokenIndex116
					}
				l117:
					if !_rules[ruleArg]() {
						goto l113
					}
					goto l112
				l113:
					position, tokenIndex = position113, tokenIndex113
				}
				add(ruleArgs, position111)
			}
			return true
		l110:
			position, tokenIndex = position110, tokenIndex110
			return false
		},
		/* 9 Arg <- <(QuotedArg / ([0-9] / [0-9] / ([a-z] / [A-Z]) / '%' / '+' / '-' / '*' / '_' / '@' / '.')*)> */
		func() bool {
			{
				position119 := position
				{
					position120, tokenIndex120 := position, tokenIndex
					if !_rules[ruleQuotedArg]() {
						goto l121
					}
					goto l120
				l121:
					position, tokenIndex = position120, tokenIndex120
				l122:
					{
						position123, tokenIndex123 := position, tokenIndex
						{
							position124, tokenIndex124 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l125
							}
							position++
							goto l124
						l125:
							position, tokenIndex = position124, tokenIndex124
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l126
							}
							position++
							goto l124
						l126:
							position, tokenIndex = position124, tokenIndex124
							{
								position128, tokenIndex128 := position, tokenIndex
								if c := buffer[position]; c < rune('a') || c > rune('z') {
									goto l129
								}
								position++
								goto l128
							l129:
								position, tokenIndex = position128, tokenIndex128
								if c := buffer[position]; c < rune('A') || c > rune('Z') {
									goto l127
								}
								position++
							}
						l128:
							goto l124
						l127:
							position, tokenIndex = position124, tokenIndex124
							if buffer[position] != rune('%') {
								goto l130
							}
							position++
							goto l124
						l130:
							position, tokenIndex = position124, tokenIndex124
							if buffer[position] != rune('+') {
								goto l131
							}
							position++
							goto l124
						l131:
							position, tokenIndex = position124, tokenIndex124
							if buffer[position] != rune('-') {
								goto l132
							}
							position++
							goto l124
						l132:
							position, tokenIndex = position124, tokenIndex124
							if buffer[position] != rune('*') {
								goto l133
							}
							position++
							goto l124
						l133:
							position, tokenIndex = position124, tokenIndex124
							if buffer[position] != rune('_') {
								goto l134
							}
							position++
							goto l124
						l134:
							position, tokenIndex = position124, tokenIndex124
							if buffer[position] != rune('@') {
								goto l135
							}
							position++
							goto l124
						l135:
							position, tokenIndex = position124, tokenIndex124
							if buffer[position] != rune('.') {
								goto l123
							}
							position++
						}
					l124:
						goto l122
					l123:
						position, tokenIndex = position123, tokenIndex123
					}
				}
			l120:
				add(ruleArg, position119)
			}
			return true
		},
		/* 10 QuotedArg <- <('"' QuotedText '"')> */
		func() bool {
			position136, tokenIndex136 := position, tokenIndex
			{
				position137 := position
				if buffer[position] != rune('"') {
					goto l136
				}
				position++
				if !_rules[ruleQuotedText]() {
					goto l136
				}
				if buffer[position] != rune('"') {
					goto l136
				}
				position++
				add(ruleQuotedArg, position137)
			}
			return true
		l136:
			position, tokenIndex = position136, tokenIndex136
			return false
		},
		/* 11 QuotedText <- <(EscapedChar / (!'"' .))*> */
		func() bool {
			{
				position139 := position
			l140:
				{
					position141, tokenIndex141 := position, tokenIndex
					{
						position142, tokenIndex142 := position, tokenIndex
						if !_rules[ruleEscapedChar]() {
							goto l143
						}
						goto l142
					l143:
						position, tokenIndex = position142, tokenIndex142
						{
							position144, tokenIndex144 := position, tokenIndex
							if buffer[position] != rune('"') {
								goto l144
							}
							position++
							goto l141
						l144:
							position, tokenIndex = position144, tokenIndex144
						}
						if !matchDot() {
							goto l141
						}
					}
				l142:
					goto l140
				l141:
					position, tokenIndex = position141, tokenIndex141
				}
				add(ruleQuotedText, position139)
			}
			return true
		},
		/* 12 LabelContainingDirective <- <(LabelContainingDirectiveName WS SymbolArgs)> */
		func() bool {
			position145, tokenIndex145 := position, tokenIndex
			{
				position146 := position
				if !_rules[ruleLabelContainingDirectiveName]() {
					goto l145
				}
				if !_rules[ruleWS]() {
					goto l145
				}
				if !_rules[ruleSymbolArgs]() {
					goto l145
				}
				add(ruleLabelContainingDirective, position146)
			}
			return true
		l145:
			position, tokenIndex = position145, tokenIndex145
			return false
		},
		/* 13 LabelContainingDirectiveName <- <(('.' ('x' / 'X') ('w' / 'W') ('o' / 'O') ('r' / 'R') ('d' / 'D')) / ('.' ('w' / 'W') ('o' / 'O') ('r' / 'R') ('d' / 'D')) / ('.' ('l' / 'L') ('o' / 'O') ('n' / 'N') ('g' / 'G')) / ('.' ('s' / 'S') ('e' / 'E') ('t' / 'T')) / ('.' ('b' / 'B') ('y' / 'Y') ('t' / 'T') ('e' / 'E')) / ('.' '8' ('b' / 'B') ('y' / 'Y') ('t' / 'T') ('e' / 'E')) / ('.' '4' ('b' / 'B') ('y' / 'Y') ('t' / 'T') ('e' / 'E')) / ('.' ('q' / 'Q') ('u' / 'U') ('a' / 'A') ('d' / 'D')) / ('.' ('t' / 'T') ('c' / 'C')) / ('.' ('l' / 'L') ('o' / 'O') ('c' / 'C') ('a' / 'A') ('l' / 'L') ('e' / 'E') ('n' / 'N') ('t' / 'T') ('r' / 'R') ('y' / 'Y')) / ('.' ('s' / 'S') ('i' / 'I') ('z' / 'Z') ('e' / 'E')) / ('.' ('t' / 'T') ('y' / 'Y') ('p' / 'P') ('e' / 'E')) / ('.' ('u' / 'U') ('l' / 'L') ('e' / 'E') ('b' / 'B') '1' '2' '8') / ('.' ('s' / 'S') ('l' / 'L') ('e' / 'E') ('b' / 'B') '1' '2' '8'))> */
		func() bool {
			position147, tokenIndex147 := position, tokenIndex
			{
				position148 := position
				{
					position149, tokenIndex149 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l150
					}
					position++
					{
						position151, tokenIndex151 := position, tokenIndex
						if buffer[position] != rune('x') {
							goto l152
						}
						position++
						goto l151
					l152:
						position, tokenIndex = position151, tokenIndex151
						if buffer[position] != rune('X') {
							goto l150
						}
						position++
					}
				l151:
					{
						position153, tokenIndex153 := position, tokenIndex
						if buffer[position] != rune('w') {
							goto l154
						}
						position++
						goto l153
					l154:
						position, tokenIndex = position153, tokenIndex153
						if buffer[position] != rune('W') {
							goto l150
						}
						position++
					}
				l153:
					{
						position155, tokenIndex155 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l156
						}
						position++
						goto l155
					l156:
						position, tokenIndex = position155, tokenIndex155
						if buffer[position] != rune('O') {
							goto l150
						}
						position++
					}
				l155:
					{
						position157, tokenIndex157 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l158
						}
						position++
						goto l157
					l158:
						position, tokenIndex = position157, tokenIndex157
						if buffer[position] != rune('R') {
							goto l150
						}
						position++
					}
				l157:
					{
						position159, tokenIndex159 := position, tokenIndex
						if buffer[position] != rune('d') {
							goto l160
						}
						position++
						goto l159
					l160:
						position, tokenIndex = position159, tokenIndex159
						if buffer[position] != rune('D') {
							goto l150
						}
						position++
					}
				l159:
					goto l149
				l150:
					position, tokenIndex = position149, tokenIndex149
					if buffer[position] != rune('.') {
						goto l161
					}
					position++
					{
						position162, tokenIndex162 := position, tokenIndex
						if buffer[position] != rune('w') {
							goto l163
						}
						position++
						goto l162
					l163:
						position, tokenIndex = position162, tokenIndex162
						if buffer[position] != rune('W') {
							goto l161
						}
						position++
					}
				l162:
					{
						position164, tokenIndex164 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l165
						}
						position++
						goto l164
					l165:
						position, tokenIndex = position164, tokenIndex164
						if buffer[position] != rune('O') {
							goto l161
						}
						position++
					}
				l164:
					{
						position166, tokenIndex166 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l167
						}
						position++
						goto l166
					l167:
						position, tokenIndex = position166, tokenIndex166
						if buffer[position] != rune('R') {
							goto l161
						}
						position++
					}
				l166:
					{
						position168, tokenIndex168 := position, tokenIndex
						if buffer[position] != rune('d') {
							goto l169
						}
						position++
						goto l168
					l169:
						position, tokenIndex = position168, tokenIndex168
						if buffer[position] != rune('D') {
							goto l161
						}
						position++
					}
				l168:
					goto l149
				l161:
					position, tokenIndex = position149, tokenIndex149
					if buffer[position] != rune('.') {
						goto l170
					}
					position++
					{
						position171, tokenIndex171 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l172
						}
						position++
						goto l171
					l172:
						position, tokenIndex = position171, tokenIndex171
						if buffer[position] != rune('L') {
							goto l170
						}
						position++
					}
				l171:
					{
						position173, tokenIndex173 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l174
						}
						position++
						goto l173
					l174:
						position, tokenIndex = position173, tokenIndex173
						if buffer[position] != rune('O') {
							goto l170
						}
						position++
					}
				l173:
					{
						position175, tokenIndex175 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l176
						}
						position++
						goto l175
					l176:
						position, tokenIndex = position175, tokenIndex175
						if buffer[position] != rune('N') {
							goto l170
						}
						position++
					}
				l175:
					{
						position177, tokenIndex177 := position, tokenIndex
						if buffer[position] != rune('g') {
							goto l178
						}
						position++
						goto l177
					l178:
						position, tokenIndex = position177, tokenIndex177
						if buffer[position] != rune('G') {
							goto l170
						}
						position++
					}
				l177:
					goto l149
				l170:
					position, tokenIndex = position149, tokenIndex149
					if buffer[position] != rune('.') {
						goto l179
					}
					position++
					{
						position180, tokenIndex180 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l181
						}
						position++
						goto l180
					l181:
						position, tokenIndex = position180, tokenIndex180
						if buffer[position] != rune('S') {
							goto l179
						}
						position++
					}
				l180:
					{
						position182, tokenIndex182 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l183
						}
						position++
						goto l182
					l183:
						position, tokenIndex = position182, tokenIndex182
						if buffer[position] != rune('E') {
							goto l179
						}
						position++
					}
				l182:
					{
						position184, tokenIndex184 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l185
						}
						position++
						goto l184
					l185:
						position, tokenIndex = position184, tokenIndex184
						if buffer[position] != rune('T') {
							goto l179
						}
						position++
					}
				l184:
					goto l149
				l179:
					position, tokenIndex = position149, tokenIndex149
					if buffer[position] != rune('.') {
						goto l186
					}
					position++
					{
						position187, tokenIndex187 := position, tokenIndex
						if buffer[position] != rune('b') {
							goto l188
						}
						position++
						goto l187
					l188:
						position, tokenIndex = position187, tokenIndex187
						if buffer[position] != rune('B') {
							goto l186
						}
						position++
					}
				l187:
					{
						position189, tokenIndex189 := position, tokenIndex
						if buffer[position] != rune('y') {
							goto l190
						}
						position++
						goto l189
					l190:
						position, tokenIndex = position189, tokenIndex189
						if buffer[position] != rune('Y') {
							goto l186
						}
						position++
					}
				l189:
					{
						position191, tokenIndex191 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l192
						}
						position++
						goto l191
					l192:
						position, tokenIndex = position191, tokenIndex191
						if buffer[position] != rune('T') {
							goto l186
						}
						position++
					}
				l191:
					{
						position193, tokenIndex193 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l194
						}
						position++
						goto l193
					l194:
						position, tokenIndex = position193, tokenIndex193
						if buffer[position] != rune('E') {
							goto l186
						}
						position++
					}
				l193:
					goto l149
				l186:
					position, tokenIndex = position149, tokenIndex149
					if buffer[position] != rune('.') {
						goto l195
					}
					position++
					if buffer[position] != rune('8') {
						goto l195
					}
					position++
					{
						position196, tokenIndex196 := position, tokenIndex
						if buffer[position] != rune('b') {
							goto l197
						}
						position++
						goto l196
					l197:
						position, tokenIndex = position196, tokenIndex196
						if buffer[position] != rune('B') {
							goto l195
						}
						position++
					}
				l196:
					{
						position198, tokenIndex198 := position, tokenIndex
						if buffer[position] != rune('y') {
							goto l199
						}
						position++
						goto l198
					l199:
						position, tokenIndex = position198, tokenIndex198
						if buffer[position] != rune('Y') {
							goto l195
						}
						position++
					}
				l198:
					{
						position200, tokenIndex200 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l201
						}
						position++
						goto l200
					l201:
						position, tokenIndex = position200, tokenIndex200
						if buffer[position] != rune('T') {
							goto l195
						}
						position++
					}
				l200:
					{
						position202, tokenIndex202 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l203
						}
						position++
						goto l202
					l203:
						position, tokenIndex = position202, tokenIndex202
						if buffer[position] != rune('E') {
							goto l195
						}
						position++
					}
				l202:
					goto l149
				l195:
					position, tokenIndex = position149, tokenIndex149
					if buffer[position] != rune('.') {
						goto l204
					}
					position++
					if buffer[position] != rune('4') {
						goto l204
					}
					position++
					{
						position205, tokenIndex205 := position, tokenIndex
						if buffer[position] != rune('b') {
							goto l206
						}
						position++
						goto l205
					l206:
						position, tokenIndex = position205, tokenIndex205
						if buffer[position] != rune('B') {
							goto l204
						}
						position++
					}
				l205:
					{
						position207, tokenIndex207 := position, tokenIndex
						if buffer[position] != rune('y') {
							goto l208
						}
						position++
						goto l207
					l208:
						position, tokenIndex = position207, tokenIndex207
						if buffer[position] != rune('Y') {
							goto l204
						}
						position++
					}
				l207:
					{
						position209, tokenIndex209 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l210
						}
						position++
						goto l209
					l210:
						position, tokenIndex = position209, tokenIndex209
						if buffer[position] != rune('T') {
							goto l204
						}
						position++
					}
				l209:
					{
						position211, tokenIndex211 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l212
						}
						position++
						goto l211
					l212:
						position, tokenIndex = position211, tokenIndex211
						if buffer[position] != rune('E') {
							goto l204
						}
						position++
					}
				l211:
					goto l149
				l204:
					position, tokenIndex = position149, tokenIndex149
					if buffer[position] != rune('.') {
						goto l213
					}
					position++
					{
						position214, tokenIndex214 := position, tokenIndex
						if buffer[position] != rune('q') {
							goto l215
						}
						position++
						goto l214
					l215:
						position, tokenIndex = position214, tokenIndex214
						if buffer[position] != rune('Q') {
							goto l213
						}
						position++
					}
				l214:
					{
						position216, tokenIndex216 := position, tokenIndex
						if buffer[position] != rune('u') {
							goto l217
						}
						position++
						goto l216
					l217:
						position, tokenIndex = position216, tokenIndex216
						if buffer[position] != rune('U') {
							goto l213
						}
						position++
					}
				l216:
					{
						position218, tokenIndex218 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l219
						}
						position++
						goto l218
					l219:
						position, tokenIndex = position218, tokenIndex218
						if buffer[position] != rune('A') {
							goto l213
						}
						position++
					}
				l218:
					{
						position220, tokenIndex220 := position, tokenIndex
						if buffer[position] != rune('d') {
							goto l221
						}
						position++
						goto l220
					l221:
						position, tokenIndex = position220, tokenIndex220
						if buffer[position] != rune('D') {
							goto l213
						}
						position++
					}
				l220:
					goto l149
				l213:
					position, tokenIndex = position149, tokenIndex149
					if buffer[position] != rune('.') {
						goto l222
					}
					position++
					{
						position223, tokenIndex223 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l224
						}
						position++
						goto l223
					l224:
						position, tokenIndex = position223, tokenIndex223
						if buffer[position] != rune('T') {
							goto l222
						}
						position++
					}
				l223:
					{
						position225, tokenIndex225 := position, tokenIndex
						if buffer[position] != rune('c') {
							goto l226
						}
						position++
						goto l225
					l226:
						position, tokenIndex = position225, tokenIndex225
						if buffer[position] != rune('C') {
							goto l222
						}
						position++
					}
				l225:
					goto l149
				l222:
					position, tokenIndex = position149, tokenIndex149
					if buffer[position] != rune('.') {
						goto l227
					}
					position++
					{
						position228, tokenIndex228 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l229
						}
						position++
						goto l228
					l229:
						position, tokenIndex = position228, tokenIndex228
						if buffer[position] != rune('L') {
							goto l227
						}
						position++
					}
				l228:
					{
						position230, tokenIndex230 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l231
						}
						position++
						goto l230
					l231:
						position, tokenIndex = position230, tokenIndex230
						if buffer[position] != rune('O') {
							goto l227
						}
						position++
					}
				l230:
					{
						position232, tokenIndex232 := position, tokenIndex
						if buffer[position] != rune('c') {
							goto l233
						}
						position++
						goto l232
					l233:
						position, tokenIndex = position232, tokenIndex232
						if buffer[position] != rune('C') {
							goto l227
						}
						position++
					}
				l232:
					{
						position234, tokenIndex234 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l235
						}
						position++
						goto l234
					l235:
						position, tokenIndex = position234, tokenIndex234
						if buffer[position] != rune('A') {
							goto l227
						}
						position++
					}
				l234:
					{
						position236, tokenIndex236 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l237
						}
						position++
						goto l236
					l237:
						position, tokenIndex = position236, tokenIndex236
						if buffer[position] != rune('L') {
							goto l227
						}
						position++
					}
				l236:
					{
						position238, tokenIndex238 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l239
						}
						position++
						goto l238
					l239:
						position, tokenIndex = position238, tokenIndex238
						if buffer[position] != rune('E') {
							goto l227
						}
						position++
					}
				l238:
					{
						position240, tokenIndex240 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l241
						}
						position++
						goto l240
					l241:
						position, tokenIndex = position240, tokenIndex240
						if buffer[position] != rune('N') {
							goto l227
						}
						position++
					}
				l240:
					{
						position242, tokenIndex242 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l243
						}
						position++
						goto l242
					l243:
						position, tokenIndex = position242, tokenIndex242
						if buffer[position] != rune('T') {
							goto l227
						}
						position++
					}
				l242:
					{
						position244, tokenIndex244 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l245
						}
						position++
						goto l244
					l245:
						position, tokenIndex = position244, tokenIndex244
						if buffer[position] != rune('R') {
							goto l227
						}
						position++
					}
				l244:
					{
						position246, tokenIndex246 := position, tokenIndex
						if buffer[position] != rune('y') {
							goto l247
						}
						position++
						goto l246
					l247:
						position, tokenIndex = position246, tokenIndex246
						if buffer[position] != rune('Y') {
							goto l227
						}
						position++
					}
				l246:
					goto l149
				l227:
					position, tokenIndex = position149, tokenIndex149
					if buffer[position] != rune('.') {
						goto l248
					}
					position++
					{
						position249, tokenIndex249 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l250
						}
						position++
						goto l249
					l250:
						position, tokenIndex = position249, tokenIndex249
						if buffer[position] != rune('S') {
							goto l248
						}
						position++
					}
				l249:
					{
						position251, tokenIndex251 := position, tokenIndex
						if buffer[position] != rune('i') {
							goto l252
						}
						position++
						goto l251
					l252:
						position, tokenIndex = position251, tokenIndex251
						if buffer[position] != rune('I') {
							goto l248
						}
						position++
					}
				l251:
					{
						position253, tokenIndex253 := position, tokenIndex
						if buffer[position] != rune('z') {
							goto l254
						}
						position++
						goto l253
					l254:
						position, tokenIndex = position253, tokenIndex253
						if buffer[position] != rune('Z') {
							goto l248
						}
						position++
					}
				l253:
					{
						position255, tokenIndex255 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l256
						}
						position++
						goto l255
					l256:
						position, tokenIndex = position255, tokenIndex255
						if buffer[position] != rune('E') {
							goto l248
						}
						position++
					}
				l255:
					goto l149
				l248:
					position, tokenIndex = position149, tokenIndex149
					if buffer[position] != rune('.') {
						goto l257
					}
					position++
					{
						position258, tokenIndex258 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l259
						}
						position++
						goto l258
					l259:
						position, tokenIndex = position258, tokenIndex258
						if buffer[position] != rune('T') {
							goto l257
						}
						position++
					}
				l258:
					{
						position260, tokenIndex260 := position, tokenIndex
						if buffer[position] != rune('y') {
							goto l261
						}
						position++
						goto l260
					l261:
						position, tokenIndex = position260, tokenIndex260
						if buffer[position] != rune('Y') {
							goto l257
						}
						position++
					}
				l260:
					{
						position262, tokenIndex262 := position, tokenIndex
						if buffer[position] != rune('p') {
							goto l263
						}
						position++
						goto l262
					l263:
						position, tokenIndex = position262, tokenIndex262
						if buffer[position] != rune('P') {
							goto l257
						}
						position++
					}
				l262:
					{
						position264, tokenIndex264 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l265
						}
						position++
						goto l264
					l265:
						position, tokenIndex = position264, tokenIndex264
						if buffer[position] != rune('E') {
							goto l257
						}
						position++
					}
				l264:
					goto l149
				l257:
					position, tokenIndex = position149, tokenIndex149
					if buffer[position] != rune('.') {
						goto l266
					}
					position++
					{
						position267, tokenIndex267 := position, tokenIndex
						if buffer[position] != rune('u') {
							goto l268
						}
						position++
						goto l267
					l268:
						position, tokenIndex = position267, tokenIndex267
						if buffer[position] != rune('U') {
							goto l266
						}
						position++
					}
				l267:
					{
						position269, tokenIndex269 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l270
						}
						position++
						goto l269
					l270:
						position, tokenIndex = position269, tokenIndex269
						if buffer[position] != rune('L') {
							goto l266
						}
						position++
					}
				l269:
					{
						position271, tokenIndex271 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l272
						}
						position++
						goto l271
					l272:
						position, tokenIndex = position271, tokenIndex271
						if buffer[position] != rune('E') {
							goto l266
						}
						position++
					}
				l271:
					{
						position273, tokenIndex273 := position, tokenIndex
						if buffer[position] != rune('b') {
							goto l274
						}
						position++
						goto l273
					l274:
						position, tokenIndex = position273, tokenIndex273
						if buffer[position] != rune('B') {
							goto l266
						}
						position++
					}
				l273:
					if buffer[position] != rune('1') {
						goto l266
					}
					position++
					if buffer[position] != rune('2') {
						goto l266
					}
					position++
					if buffer[position] != rune('8') {
						goto l266
					}
					position++
					goto l149
				l266:
					position, tokenIndex = position149, tokenIndex149
					if buffer[position] != rune('.') {
						goto l147
					}
					position++
					{
						position275, tokenIndex275 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l276
						}
						position++
						goto l275
					l276:
						position, tokenIndex = position275, tokenIndex275
						if buffer[position] != rune('S') {
							goto l147
						}
						position++
					}
				l275:
					{
						position277, tokenIndex277 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l278
						}
						position++
						goto l277
					l278:
						position, tokenIndex = position277, tokenIndex277
						if buffer[position] != rune('L') {
							goto l147
						}
						position++
					}
				l277:
					{
						position279, tokenIndex279 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l280
						}
						position++
						goto l279
					l280:
						position, tokenIndex = position279, tokenIndex279
						if buffer[position] != rune('E') {
							goto l147
						}
						position++
					}
				l279:
					{
						position281, tokenIndex281 := position, tokenIndex
						if buffer[position] != rune('b') {
							goto l282
						}
						position++
						goto l281
					l282:
						position, tokenIndex = position281, tokenIndex281
						if buffer[position] != rune('B') {
							goto l147
						}
						position++
					}
				l281:
					if buffer[position] != rune('1') {
						goto l147
					}
					position++
					if buffer[position] != rune('2') {
						goto l147
					}
					position++
					if buffer[position] != rune('8') {
						goto l147
					}
					position++
				}
			l149:
				add(ruleLabelContainingDirectiveName, position148)
			}
			return true
		l147:
			position, tokenIndex = position147, tokenIndex147
			return false
		},
		/* 14 SymbolArgs <- <(SymbolArg (WS? ',' WS? SymbolArg)*)> */
		func() bool {
			position283, tokenIndex283 := position, tokenIndex
			{
				position284 := position
				if !_rules[ruleSymbolArg]() {
					goto l283
				}
			l285:
				{
					position286, tokenIndex286 := position, tokenIndex
					{
						position287, tokenIndex287 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l287
						}
						goto l288
					l287:
						position, tokenIndex = position287, tokenIndex287
					}
				l288:
					if buffer[position] != rune(',') {
						goto l286
					}
					position++
					{
						position289, tokenIndex289 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l289
						}
						goto l290
					l289:
						position, tokenIndex = position289, tokenIndex289
					}
				l290:
					if !_rules[ruleSymbolArg]() {
						goto l286
					}
					goto l285
				l286:
					position, tokenIndex = position286, tokenIndex286
				}
				add(ruleSymbolArgs, position284)
			}
			return true
		l283:
			position, tokenIndex = position283, tokenIndex283
			return false
		},
		/* 15 SymbolArg <- <SymbolExpr> */
		func() bool {
			position291, tokenIndex291 := position, tokenIndex
			{
				position292 := position
				if !_rules[ruleSymbolExpr]() {
					goto l291
				}
				add(ruleSymbolArg, position292)
			}
			return true
		l291:
			position, tokenIndex = position291, tokenIndex291
			return false
		},
		/* 16 SymbolExpr <- <(SymbolAtom (WS? SymbolOperator WS? SymbolExpr)?)> */
		func() bool {
			position293, tokenIndex293 := position, tokenIndex
			{
				position294 := position
				if !_rules[ruleSymbolAtom]() {
					goto l293
				}
				{
					position295, tokenIndex295 := position, tokenIndex
					{
						position297, tokenIndex297 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l297
						}
						goto l298
					l297:
						position, tokenIndex = position297, tokenIndex297
					}
				l298:
					if !_rules[ruleSymbolOperator]() {
						goto l295
					}
					{
						position299, tokenIndex299 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l299
						}
						goto l300
					l299:
						position, tokenIndex = position299, tokenIndex299
					}
				l300:
					if !_rules[ruleSymbolExpr]() {
						goto l295
					}
					goto l296
				l295:
					position, tokenIndex = position295, tokenIndex295
				}
			l296:
				add(ruleSymbolExpr, position294)
			}
			return true
		l293:
			position, tokenIndex = position293, tokenIndex293
			return false
		},
		/* 17 SymbolAtom <- <(Offset / SymbolType / LocalLabelRef / (LocalSymbol TCMarker?) / (SymbolName Offset) / (SymbolName TCMarker?) / Dot / (OpenParen WS? SymbolExpr WS? CloseParen))> */
		func() bool {
			position301, tokenIndex301 := position, tokenIndex
			{
				position302 := position
				{
					position303, tokenIndex303 := position, tokenIndex
					if !_rules[ruleOffset]() {
						goto l304
					}
					goto l303
				l304:
					position, tokenIndex = position303, tokenIndex303
					if !_rules[ruleSymbolType]() {
						goto l305
					}
					goto l303
				l305:
					position, tokenIndex = position303, tokenIndex303
					if !_rules[ruleLocalLabelRef]() {
						goto l306
					}
					goto l303
				l306:
					position, tokenIndex = position303, tokenIndex303
					if !_rules[ruleLocalSymbol]() {
						goto l307
					}
					{
						position308, tokenIndex308 := position, tokenIndex
						if !_rules[ruleTCMarker]() {
							goto l308
						}
						goto l309
					l308:
						position, tokenIndex = position308, tokenIndex308
					}
				l309:
					goto l303
				l307:
					position, tokenIndex = position303, tokenIndex303
					if !_rules[ruleSymbolName]() {
						goto l310
					}
					if !_rules[ruleOffset]() {
						goto l310
					}
					goto l303
				l310:
					position, tokenIndex = position303, tokenIndex303
					if !_rules[ruleSymbolName]() {
						goto l311
					}
					{
						position312, tokenIndex312 := position, tokenIndex
						if !_rules[ruleTCMarker]() {
							goto l312
						}
						goto l313
					l312:
						position, tokenIndex = position312, tokenIndex312
					}
				l313:
					goto l303
				l311:
					position, tokenIndex = position303, tokenIndex303
					if !_rules[ruleDot]() {
						goto l314
					}
					goto l303
				l314:
					position, tokenIndex = position303, tokenIndex303
					if !_rules[ruleOpenParen]() {
						goto l301
					}
					{
						position315, tokenIndex315 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l315
						}
						goto l316
					l315:
						position, tokenIndex = position315, tokenIndex315
					}
				l316:
					if !_rules[ruleSymbolExpr]() {
						goto l301
					}
					{
						position317, tokenIndex317 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l317
						}
						goto l318
					l317:
						position, tokenIndex = position317, tokenIndex317
					}
				l318:
					if !_rules[ruleCloseParen]() {
						goto l301
					}
				}
			l303:
				add(ruleSymbolAtom, position302)
			}
			return true
		l301:
			position, tokenIndex = position301, tokenIndex301
			return false
		},
		/* 18 SymbolOperator <- <('+' / '-' / '|' / ('<' '<') / ('>' '>'))> */
		func() bool {
			position319, tokenIndex319 := position, tokenIndex
			{
				position320 := position
				{
					position321, tokenIndex321 := position, tokenIndex
					if buffer[position] != rune('+') {
						goto l322
					}
					position++
					goto l321
				l322:
					position, tokenIndex = position321, tokenIndex321
					if buffer[position] != rune('-') {
						goto l323
					}
					position++
					goto l321
				l323:
					position, tokenIndex = position321, tokenIndex321
					if buffer[position] != rune('|') {
						goto l324
					}
					position++
					goto l321
				l324:
					position, tokenIndex = position321, tokenIndex321
					if buffer[position] != rune('<') {
						goto l325
					}
					position++
					if buffer[position] != rune('<') {
						goto l325
					}
					position++
					goto l321
				l325:
					position, tokenIndex = position321, tokenIndex321
					if buffer[position] != rune('>') {
						goto l319
					}
					position++
					if buffer[position] != rune('>') {
						goto l319
					}
					position++
				}
			l321:
				add(ruleSymbolOperator, position320)
			}
			return true
		l319:
			position, tokenIndex = position319, tokenIndex319
			return false
		},
		/* 19 OpenParen <- <'('> */
		func() bool {
			position326, tokenIndex326 := position, tokenIndex
			{
				position327 := position
				if buffer[position] != rune('(') {
					goto l326
				}
				position++
				add(ruleOpenParen, position327)
			}
			return true
		l326:
			position, tokenIndex = position326, tokenIndex326
			return false
		},
		/* 20 CloseParen <- <')'> */
		func() bool {
			position328, tokenIndex328 := position, tokenIndex
			{
				position329 := position
				if buffer[position] != rune(')') {
					goto l328
				}
				position++
				add(ruleCloseParen, position329)
			}
			return true
		l328:
			position, tokenIndex = position328, tokenIndex328
			return false
		},
		/* 21 SymbolType <- <(('@' / '%') (('f' 'u' 'n' 'c' 't' 'i' 'o' 'n') / ('o' 'b' 'j' 'e' 'c' 't')))> */
		func() bool {
			position330, tokenIndex330 := position, tokenIndex
			{
				position331 := position
				{
					position332, tokenIndex332 := position, tokenIndex
					if buffer[position] != rune('@') {
						goto l333
					}
					position++
					goto l332
				l333:
					position, tokenIndex = position332, tokenIndex332
					if buffer[position] != rune('%') {
						goto l330
					}
					position++
				}
			l332:
				{
					position334, tokenIndex334 := position, tokenIndex
					if buffer[position] != rune('f') {
						goto l335
					}
					position++
					if buffer[position] != rune('u') {
						goto l335
					}
					position++
					if buffer[position] != rune('n') {
						goto l335
					}
					position++
					if buffer[position] != rune('c') {
						goto l335
					}
					position++
					if buffer[position] != rune('t') {
						goto l335
					}
					position++
					if buffer[position] != rune('i') {
						goto l335
					}
					position++
					if buffer[position] != rune('o') {
						goto l335
					}
					position++
					if buffer[position] != rune('n') {
						goto l335
					}
					position++
					goto l334
				l335:
					position, tokenIndex = position334, tokenIndex334
					if buffer[position] != rune('o') {
						goto l330
					}
					position++
					if buffer[position] != rune('b') {
						goto l330
					}
					position++
					if buffer[position] != rune('j') {
						goto l330
					}
					position++
					if buffer[position] != rune('e') {
						goto l330
					}
					position++
					if buffer[position] != rune('c') {
						goto l330
					}
					position++
					if buffer[position] != rune('t') {
						goto l330
					}
					position++
				}
			l334:
				add(ruleSymbolType, position331)
			}
			return true
		l330:
			position, tokenIndex = position330, tokenIndex330
			return false
		},
		/* 22 Dot <- <'.'> */
		func() bool {
			position336, tokenIndex336 := position, tokenIndex
			{
				position337 := position
				if buffer[position] != rune('.') {
					goto l336
				}
				position++
				add(ruleDot, position337)
			}
			return true
		l336:
			position, tokenIndex = position336, tokenIndex336
			return false
		},
		/* 23 TCMarker <- <('[' 'T' 'C' ']')> */
		func() bool {
			position338, tokenIndex338 := position, tokenIndex
			{
				position339 := position
				if buffer[position] != rune('[') {
					goto l338
				}
				position++
				if buffer[position] != rune('T') {
					goto l338
				}
				position++
				if buffer[position] != rune('C') {
					goto l338
				}
				position++
				if buffer[position] != rune(']') {
					goto l338
				}
				position++
				add(ruleTCMarker, position339)
			}
			return true
		l338:
			position, tokenIndex = position338, tokenIndex338
			return false
		},
		/* 24 EscapedChar <- <('\\' .)> */
		func() bool {
			position340, tokenIndex340 := position, tokenIndex
			{
				position341 := position
				if buffer[position] != rune('\\') {
					goto l340
				}
				position++
				if !matchDot() {
					goto l340
				}
				add(ruleEscapedChar, position341)
			}
			return true
		l340:
			position, tokenIndex = position340, tokenIndex340
			return false
		},
		/* 25 WS <- <(' ' / '\t')+> */
		func() bool {
			position342, tokenIndex342 := position, tokenIndex
			{
				position343 := position
				{
					position346, tokenIndex346 := position, tokenIndex
					if buffer[position] != rune(' ') {
						goto l347
					}
					position++
					goto l346
				l347:
					position, tokenIndex = position346, tokenIndex346
					if buffer[position] != rune('\t') {
						goto l342
					}
					position++
				}
			l346:
			l344:
				{
					position345, tokenIndex345 := position, tokenIndex
					{
						position348, tokenIndex348 := position, tokenIndex
						if buffer[position] != rune(' ') {
							goto l349
						}
						position++
						goto l348
					l349:
						position, tokenIndex = position348, tokenIndex348
						if buffer[position] != rune('\t') {
							goto l345
						}
						position++
					}
				l348:
					goto l344
				l345:
					position, tokenIndex = position345, tokenIndex345
				}
				add(ruleWS, position343)
			}
			return true
		l342:
			position, tokenIndex = position342, tokenIndex342
			return false
		},
		/* 26 Comment <- <((('/' '/') / '#') (!'\n' .)*)> */
		func() bool {
			position350, tokenIndex350 := position, tokenIndex
			{
				position351 := position
				{
					position352, tokenIndex352 := position, tokenIndex
					if buffer[position] != rune('/') {
						goto l353
					}
					position++
					if buffer[position] != rune('/') {
						goto l353
					}
					position++
					goto l352
				l353:
					position, tokenIndex = position352, tokenIndex352
					if buffer[position] != rune('#') {
						goto l350
					}
					position++
				}
			l352:
			l354:
				{
					position355, tokenIndex355 := position, tokenIndex
					{
						position356, tokenIndex356 := position, tokenIndex
						if buffer[position] != rune('\n') {
							goto l356
						}
						position++
						goto l355
					l356:
						position, tokenIndex = position356, tokenIndex356
					}
					if !matchDot() {
						goto l355
					}
					goto l354
				l355:
					position, tokenIndex = position355, tokenIndex355
				}
				add(ruleComment, position351)
			}
			return true
		l350:
			position, tokenIndex = position350, tokenIndex350
			return false
		},
		/* 27 Label <- <((LocalSymbol / LocalLabel / SymbolName) ':')> */
		func() bool {
			position357, tokenIndex357 := position, tokenIndex
			{
				position358 := position
				{
					position359, tokenIndex359 := position, tokenIndex
					if !_rules[ruleLocalSymbol]() {
						goto l360
					}
					goto l359
				l360:
					position, tokenIndex = position359, tokenIndex359
					if !_rules[ruleLocalLabel]() {
						goto l361
					}
					goto l359
				l361:
					position, tokenIndex = position359, tokenIndex359
					if !_rules[ruleSymbolName]() {
						goto l357
					}
				}
			l359:
				if buffer[position] != rune(':') {
					goto l357
				}
				position++
				add(ruleLabel, position358)
			}
			return true
		l357:
			position, tokenIndex = position357, tokenIndex357
			return false
		},
		/* 28 SymbolName <- <(([a-z] / [A-Z] / '.' / '_') ([a-z] / [A-Z] / '.' / ([0-9] / [0-9]) / '$' / '_')*)> */
		func() bool {
			position362, tokenIndex362 := position, tokenIndex
			{
				position363 := position
				{
					position364, tokenIndex364 := position, tokenIndex
					if c := buffer[position]; c < rune('a') || c > rune('z') {
						goto l365
					}
					position++
					goto l364
				l365:
					position, tokenIndex = position364, tokenIndex364
					if c := buffer[position]; c < rune('A') || c > rune('Z') {
						goto l366
					}
					position++
					goto l364
				l366:
					position, tokenIndex = position364, tokenIndex364
					if buffer[position] != rune('.') {
						goto l367
					}
					position++
					goto l364
				l367:
					position, tokenIndex = position364, tokenIndex364
					if buffer[position] != rune('_') {
						goto l362
					}
					position++
				}
			l364:
			l368:
				{
					position369, tokenIndex369 := position, tokenIndex
					{
						position370, tokenIndex370 := position, tokenIndex
						if c := buffer[position]; c < rune('a') || c > rune('z') {
							goto l371
						}
						position++
						goto l370
					l371:
						position, tokenIndex = position370, tokenIndex370
						if c := buffer[position]; c < rune('A') || c > rune('Z') {
							goto l372
						}
						position++
						goto l370
					l372:
						position, tokenIndex = position370, tokenIndex370
						if buffer[position] != rune('.') {
							goto l373
						}
						position++
						goto l370
					l373:
						position, tokenIndex = position370, tokenIndex370
						{
							position375, tokenIndex375 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l376
							}
							position++
							goto l375
						l376:
							position, tokenIndex = position375, tokenIndex375
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l374
							}
							position++
						}
					l375:
						goto l370
					l374:
						position, tokenIndex = position370, tokenIndex370
						if buffer[position] != rune('$') {
							goto l377
						}
						position++
						goto l370
					l377:
						position, tokenIndex = position370, tokenIndex370
						if buffer[position] != rune('_') {
							goto l369
						}
						position++
					}
				l370:
					goto l368
				l369:
					position, tokenIndex = position369, tokenIndex369
				}
				add(ruleSymbolName, position363)
			}
			return true
		l362:
			position, tokenIndex = position362, tokenIndex362
			return false
		},
		/* 29 LocalSymbol <- <('.' 'L' ([a-z] / [A-Z] / ([a-z] / [A-Z]) / '.' / ([0-9] / [0-9]) / '$' / '_')+)> */
		func() bool {
			position378, tokenIndex378 := position, tokenIndex
			{
				position379 := position
				if buffer[position] != rune('.') {
					goto l378
				}
				position++
				if buffer[position] != rune('L') {
					goto l378
				}
				position++
				{
					position382, tokenIndex382 := position, tokenIndex
					if c := buffer[position]; c < rune('a') || c > rune('z') {
						goto l383
					}
					position++
					goto l382
				l383:
					position, tokenIndex = position382, tokenIndex382
					if c := buffer[position]; c < rune('A') || c > rune('Z') {
						goto l384
					}
					position++
					goto l382
				l384:
					position, tokenIndex = position382, tokenIndex382
					{
						position386, tokenIndex386 := position, tokenIndex
						if c := buffer[position]; c < rune('a') || c > rune('z') {
							goto l387
						}
						position++
						goto l386
					l387:
						position, tokenIndex = position386, tokenIndex386
						if c := buffer[position]; c < rune('A') || c > rune('Z') {
							goto l385
						}
						position++
					}
				l386:
					goto l382
				l385:
					position, tokenIndex = position382, tokenIndex382
					if buffer[position] != rune('.') {
						goto l388
					}
					position++
					goto l382
				l388:
					position, tokenIndex = position382, tokenIndex382
					{
						position390, tokenIndex390 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l391
						}
						position++
						goto l390
					l391:
						position, tokenIndex = position390, tokenIndex390
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l389
						}
						position++
					}
				l390:
					goto l382
				l389:
					position, tokenIndex = position382, tokenIndex382
					if buffer[position] != rune('$') {
						goto l392
					}
					position++
					goto l382
				l392:
					position, tokenIndex = position382, tokenIndex382
					if buffer[position] != rune('_') {
						goto l378
					}
					position++
				}
			l382:
			l380:
				{
					position381, tokenIndex381 := position, tokenIndex
					{
						position393, tokenIndex393 := position, tokenIndex
						if c := buffer[position]; c < rune('a') || c > rune('z') {
							goto l394
						}
						position++
						goto l393
					l394:
						position, tokenIndex = position393, tokenIndex393
						if c := buffer[position]; c < rune('A') || c > rune('Z') {
							goto l395
						}
						position++
						goto l393
					l395:
						position, tokenIndex = position393, tokenIndex393
						{
							position397, tokenIndex397 := position, tokenIndex
							if c := buffer[position]; c < rune('a') || c > rune('z') {
								goto l398
							}
							position++
							goto l397
						l398:
							position, tokenIndex = position397, tokenIndex397
							if c := buffer[position]; c < rune('A') || c > rune('Z') {
								goto l396
							}
							position++
						}
					l397:
						goto l393
					l396:
						position, tokenIndex = position393, tokenIndex393
						if buffer[position] != rune('.') {
							goto l399
						}
						position++
						goto l393
					l399:
						position, tokenIndex = position393, tokenIndex393
						{
							position401, tokenIndex401 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l402
							}
							position++
							goto l401
						l402:
							position, tokenIndex = position401, tokenIndex401
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l400
							}
							position++
						}
					l401:
						goto l393
					l400:
						position, tokenIndex = position393, tokenIndex393
						if buffer[position] != rune('$') {
							goto l403
						}
						position++
						goto l393
					l403:
						position, tokenIndex = position393, tokenIndex393
						if buffer[position] != rune('_') {
							goto l381
						}
						position++
					}
				l393:
					goto l380
				l381:
					position, tokenIndex = position381, tokenIndex381
				}
				add(ruleLocalSymbol, position379)
			}
			return true
		l378:
			position, tokenIndex = position378, tokenIndex378
			return false
		},
		/* 30 LocalLabel <- <([0-9] ([0-9] / '$')*)> */
		func() bool {
			position404, tokenIndex404 := position, tokenIndex
			{
				position405 := position
				if c := buffer[position]; c < rune('0') || c > rune('9') {
					goto l404
				}
				position++
			l406:
				{
					position407, tokenIndex407 := position, tokenIndex
					{
						position408, tokenIndex408 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l409
						}
						position++
						goto l408
					l409:
						position, tokenIndex = position408, tokenIndex408
						if buffer[position] != rune('$') {
							goto l407
						}
						position++
					}
				l408:
					goto l406
				l407:
					position, tokenIndex = position407, tokenIndex407
				}
				add(ruleLocalLabel, position405)
			}
			return true
		l404:
			position, tokenIndex = position404, tokenIndex404
			return false
		},
		/* 31 LocalLabelRef <- <([0-9] ([0-9] / '$')* ('b' / 'f'))> */
		func() bool {
			position410, tokenIndex410 := position, tokenIndex
			{
				position411 := position
				if c := buffer[position]; c < rune('0') || c > rune('9') {
					goto l410
				}
				position++
			l412:
				{
					position413, tokenIndex413 := position, tokenIndex
					{
						position414, tokenIndex414 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l415
						}
						position++
						goto l414
					l415:
						position, tokenIndex = position414, tokenIndex414
						if buffer[position] != rune('$') {
							goto l413
						}
						position++
					}
				l414:
					goto l412
				l413:
					position, tokenIndex = position413, tokenIndex413
				}
				{
					position416, tokenIndex416 := position, tokenIndex
					if buffer[position] != rune('b') {
						goto l417
					}
					position++
					goto l416
				l417:
					position, tokenIndex = position416, tokenIndex416
					if buffer[position] != rune('f') {
						goto l410
					}
					position++
				}
			l416:
				add(ruleLocalLabelRef, position411)
			}
			return true
		l410:
			position, tokenIndex = position410, tokenIndex410
			return false
		},
		/* 32 Instruction <- <(InstructionName (WS InstructionArg (WS? ','? WS? InstructionArg)*)?)> */
		func() bool {
			position418, tokenIndex418 := position, tokenIndex
			{
				position419 := position
				if !_rules[ruleInstructionName]() {
					goto l418
				}
				{
					position420, tokenIndex420 := position, tokenIndex
					if !_rules[ruleWS]() {
						goto l420
					}
					if !_rules[ruleInstructionArg]() {
						goto l420
					}
				l422:
					{
						position423, tokenIndex423 := position, tokenIndex
						{
							position424, tokenIndex424 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l424
							}
							goto l425
						l424:
							position, tokenIndex = position424, tokenIndex424
						}
					l425:
						{
							position426, tokenIndex426 := position, tokenIndex
							if buffer[position] != rune(',') {
								goto l426
							}
							position++
							goto l427
						l426:
							position, tokenIndex = position426, tokenIndex426
						}
					l427:
						{
							position428, tokenIndex428 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l428
							}
							goto l429
						l428:
							position, tokenIndex = position428, tokenIndex428
						}
					l429:
						if !_rules[ruleInstructionArg]() {
							goto l423
						}
						goto l422
					l423:
						position, tokenIndex = position423, tokenIndex423
					}
					goto l421
				l420:
					position, tokenIndex = position420, tokenIndex420
				}
			l421:
				add(ruleInstruction, position419)
			}
			return true
		l418:
			position, tokenIndex = position418, tokenIndex418
			return false
		},
		/* 33 InstructionName <- <(([a-z] / [A-Z]) ([a-z] / [A-Z] / '.' / ([0-9] / [0-9]))* ('.' / '+' / '-')?)> */
		func() bool {
			position430, tokenIndex430 := position, tokenIndex
			{
				position431 := position
				{
					position432, tokenIndex432 := position, tokenIndex
					if c := buffer[position]; c < rune('a') || c > rune('z') {
						goto l433
					}
					position++
					goto l432
				l433:
					position, tokenIndex = position432, tokenIndex432
					if c := buffer[position]; c < rune('A') || c > rune('Z') {
						goto l430
					}
					position++
				}
			l432:
			l434:
				{
					position435, tokenIndex435 := position, tokenIndex
					{
						position436, tokenIndex436 := position, tokenIndex
						if c := buffer[position]; c < rune('a') || c > rune('z') {
							goto l437
						}
						position++
						goto l436
					l437:
						position, tokenIndex = position436, tokenIndex436
						if c := buffer[position]; c < rune('A') || c > rune('Z') {
							goto l438
						}
						position++
						goto l436
					l438:
						position, tokenIndex = position436, tokenIndex436
						if buffer[position] != rune('.') {
							goto l439
						}
						position++
						goto l436
					l439:
						position, tokenIndex = position436, tokenIndex436
						{
							position440, tokenIndex440 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l441
							}
							position++
							goto l440
						l441:
							position, tokenIndex = position440, tokenIndex440
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l435
							}
							position++
						}
					l440:
					}
				l436:
					goto l434
				l435:
					position, tokenIndex = position435, tokenIndex435
				}
				{
					position442, tokenIndex442 := position, tokenIndex
					{
						position444, tokenIndex444 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l445
						}
						position++
						goto l444
					l445:
						position, tokenIndex = position444, tokenIndex444
						if buffer[position] != rune('+') {
							goto l446
						}
						position++
						goto l444
					l446:
						position, tokenIndex = position444, tokenIndex444
						if buffer[position] != rune('-') {
							goto l442
						}
						position++
					}
				l444:
					goto l443
				l442:
					position, tokenIndex = position442, tokenIndex442
				}
			l443:
				add(ruleInstructionName, position431)
			}
			return true
		l430:
			position, tokenIndex = position430, tokenIndex430
			return false
		},
		/* 34 InstructionArg <- <(IndirectionIndicator? (ARMConstantTweak / RegisterOrConstant / LocalLabelRef / TOCRefHigh / TOCRefLow / GOTLocation / GOTSymbolOffset / MemoryRef) AVX512Token*)> */
		func() bool {
			position447, tokenIndex447 := position, tokenIndex
			{
				position448 := position
				{
					position449, tokenIndex449 := position, tokenIndex
					if !_rules[ruleIndirectionIndicator]() {
						goto l449
					}
					goto l450
				l449:
					position, tokenIndex = position449, tokenIndex449
				}
			l450:
				{
					position451, tokenIndex451 := position, tokenIndex
					if !_rules[ruleARMConstantTweak]() {
						goto l452
					}
					goto l451
				l452:
					position, tokenIndex = position451, tokenIndex451
					if !_rules[ruleRegisterOrConstant]() {
						goto l453
					}
					goto l451
				l453:
					position, tokenIndex = position451, tokenIndex451
					if !_rules[ruleLocalLabelRef]() {
						goto l454
					}
					goto l451
				l454:
					position, tokenIndex = position451, tokenIndex451
					if !_rules[ruleTOCRefHigh]() {
						goto l455
					}
					goto l451
				l455:
					position, tokenIndex = position451, tokenIndex451
					if !_rules[ruleTOCRefLow]() {
						goto l456
					}
					goto l451
				l456:
					position, tokenIndex = position451, tokenIndex451
					if !_rules[ruleGOTLocation]() {
						goto l457
					}
					goto l451
				l457:
					position, tokenIndex = position451, tokenIndex451
					if !_rules[ruleGOTSymbolOffset]() {
						goto l458
					}
					goto l451
				l458:
					position, tokenIndex = position451, tokenIndex451
					if !_rules[ruleMemoryRef]() {
						goto l447
					}
				}
			l451:
			l459:
				{
					position460, tokenIndex460 := position, tokenIndex
					if !_rules[ruleAVX512Token]() {
						goto l460
					}
					goto l459
				l460:
					position, tokenIndex = position460, tokenIndex460
				}
				add(ruleInstructionArg, position448)
			}
			return true
		l447:
			position, tokenIndex = position447, tokenIndex447
			return false
		},
		/* 35 GOTLocation <- <('$' '_' 'G' 'L' 'O' 'B' 'A' 'L' '_' 'O' 'F' 'F' 'S' 'E' 'T' '_' 'T' 'A' 'B' 'L' 'E' '_' '-' LocalSymbol)> */
		func() bool {
			position461, tokenIndex461 := position, tokenIndex
			{
				position462 := position
				if buffer[position] != rune('$') {
					goto l461
				}
				position++
				if buffer[position] != rune('_') {
					goto l461
				}
				position++
				if buffer[position] != rune('G') {
					goto l461
				}
				position++
				if buffer[position] != rune('L') {
					goto l461
				}
				position++
				if buffer[position] != rune('O') {
					goto l461
				}
				position++
				if buffer[position] != rune('B') {
					goto l461
				}
				position++
				if buffer[position] != rune('A') {
					goto l461
				}
				position++
				if buffer[position] != rune('L') {
					goto l461
				}
				position++
				if buffer[position] != rune('_') {
					goto l461
				}
				position++
				if buffer[position] != rune('O') {
					goto l461
				}
				position++
				if buffer[position] != rune('F') {
					goto l461
				}
				position++
				if buffer[position] != rune('F') {
					goto l461
				}
				position++
				if buffer[position] != rune('S') {
					goto l461
				}
				position++
				if buffer[position] != rune('E') {
					goto l461
				}
				position++
				if buffer[position] != rune('T') {
					goto l461
				}
				position++
				if buffer[position] != rune('_') {
					goto l461
				}
				position++
				if buffer[position] != rune('T') {
					goto l461
				}
				position++
				if buffer[position] != rune('A') {
					goto l461
				}
				position++
				if buffer[position] != rune('B') {
					goto l461
				}
				position++
				if buffer[position] != rune('L') {
					goto l461
				}
				position++
				if buffer[position] != rune('E') {
					goto l461
				}
				position++
				if buffer[position] != rune('_') {
					goto l461
				}
				position++
				if buffer[position] != rune('-') {
					goto l461
				}
				position++
				if !_rules[ruleLocalSymbol]() {
					goto l461
				}
				add(ruleGOTLocation, position462)
			}
			return true
		l461:
			position, tokenIndex = position461, tokenIndex461
			return false
		},
		/* 36 GOTSymbolOffset <- <(('$' SymbolName ('@' 'G' 'O' 'T') ('O' 'F' 'F')?) / (':' ('g' / 'G') ('o' / 'O') ('t' / 'T') ':' SymbolName))> */
		func() bool {
			position463, tokenIndex463 := position, tokenIndex
			{
				position464 := position
				{
					position465, tokenIndex465 := position, tokenIndex
					if buffer[position] != rune('$') {
						goto l466
					}
					position++
					if !_rules[ruleSymbolName]() {
						goto l466
					}
					if buffer[position] != rune('@') {
						goto l466
					}
					position++
					if buffer[position] != rune('G') {
						goto l466
					}
					position++
					if buffer[position] != rune('O') {
						goto l466
					}
					position++
					if buffer[position] != rune('T') {
						goto l466
					}
					position++
					{
						position467, tokenIndex467 := position, tokenIndex
						if buffer[position] != rune('O') {
							goto l467
						}
						position++
						if buffer[position] != rune('F') {
							goto l467
						}
						position++
						if buffer[position] != rune('F') {
							goto l467
						}
						position++
						goto l468
					l467:
						position, tokenIndex = position467, tokenIndex467
					}
				l468:
					goto l465
				l466:
					position, tokenIndex = position465, tokenIndex465
					if buffer[position] != rune(':') {
						goto l463
					}
					position++
					{
						position469, tokenIndex469 := position, tokenIndex
						if buffer[position] != rune('g') {
							goto l470
						}
						position++
						goto l469
					l470:
						position, tokenIndex = position469, tokenIndex469
						if buffer[position] != rune('G') {
							goto l463
						}
						position++
					}
				l469:
					{
						position471, tokenIndex471 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l472
						}
						position++
						goto l471
					l472:
						position, tokenIndex = position471, tokenIndex471
						if buffer[position] != rune('O') {
							goto l463
						}
						position++
					}
				l471:
					{
						position473, tokenIndex473 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l474
						}
						position++
						goto l473
					l474:
						position, tokenIndex = position473, tokenIndex473
						if buffer[position] != rune('T') {
							goto l463
						}
						position++
					}
				l473:
					if buffer[position] != rune(':') {
						goto l463
					}
					position++
					if !_rules[ruleSymbolName]() {
						goto l463
					}
				}
			l465:
				add(ruleGOTSymbolOffset, position464)
			}
			return true
		l463:
			position, tokenIndex = position463, tokenIndex463
			return false
		},
		/* 37 AVX512Token <- <(WS? '{' '%'? ([0-9] / [a-z])* '}')> */
		func() bool {
			position475, tokenIndex475 := position, tokenIndex
			{
				position476 := position
				{
					position477, tokenIndex477 := position, tokenIndex
					if !_rules[ruleWS]() {
						goto l477
					}
					goto l478
				l477:
					position, tokenIndex = position477, tokenIndex477
				}
			l478:
				if buffer[position] != rune('{') {
					goto l475
				}
				position++
				{
					position479, tokenIndex479 := position, tokenIndex
					if buffer[position] != rune('%') {
						goto l479
					}
					position++
					goto l480
				l479:
					position, tokenIndex = position479, tokenIndex479
				}
			l480:
			l481:
				{
					position482, tokenIndex482 := position, tokenIndex
					{
						position483, tokenIndex483 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l484
						}
						position++
						goto l483
					l484:
						position, tokenIndex = position483, tokenIndex483
						if c := buffer[position]; c < rune('a') || c > rune('z') {
							goto l482
						}
						position++
					}
				l483:
					goto l481
				l482:
					position, tokenIndex = position482, tokenIndex482
				}
				if buffer[position] != rune('}') {
					goto l475
				}
				position++
				add(ruleAVX512Token, position476)
			}
			return true
		l475:
			position, tokenIndex = position475, tokenIndex475
			return false
		},
		/* 38 TOCRefHigh <- <('.' 'T' 'O' 'C' '.' '-' (('0' 'b') / ('.' 'L' ([a-z] / [A-Z] / '_' / [0-9])+)) ('@' ('h' / 'H') ('a' / 'A')))> */
		func() bool {
			position485, tokenIndex485 := position, tokenIndex
			{
				position486 := position
				if buffer[position] != rune('.') {
					goto l485
				}
				position++
				if buffer[position] != rune('T') {
					goto l485
				}
				position++
				if buffer[position] != rune('O') {
					goto l485
				}
				position++
				if buffer[position] != rune('C') {
					goto l485
				}
				position++
				if buffer[position] != rune('.') {
					goto l485
				}
				position++
				if buffer[position] != rune('-') {
					goto l485
				}
				position++
				{
					position487, tokenIndex487 := position, tokenIndex
					if buffer[position] != rune('0') {
						goto l488
					}
					position++
					if buffer[position] != rune('b') {
						goto l488
					}
					position++
					goto l487
				l488:
					position, tokenIndex = position487, tokenIndex487
					if buffer[position] != rune('.') {
						goto l485
					}
					position++
					if buffer[position] != rune('L') {
						goto l485
					}
					position++
					{
						position491, tokenIndex491 := position, tokenIndex
						if c := buffer[position]; c < rune('a') || c > rune('z') {
							goto l492
						}
						position++
						goto l491
					l492:
						position, tokenIndex = position491, tokenIndex491
						if c := buffer[position]; c < rune('A') || c > rune('Z') {
							goto l493
						}
						position++
						goto l491
					l493:
						position, tokenIndex = position491, tokenIndex491
						if buffer[position] != rune('_') {
							goto l494
						}
						position++
						goto l491
					l494:
						position, tokenIndex = position491, tokenIndex491
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l485
						}
						position++
					}
				l491:
				l489:
					{
						position490, tokenIndex490 := position, tokenIndex
						{
							position495, tokenIndex495 := position, tokenIndex
							if c := buffer[position]; c < rune('a') || c > rune('z') {
								goto l496
							}
							position++
							goto l495
						l496:
							position, tokenIndex = position495, tokenIndex495
							if c := buffer[position]; c < rune('A') || c > rune('Z') {
								goto l497
							}
							position++
							goto l495
						l497:
							position, tokenIndex = position495, tokenIndex495
							if buffer[position] != rune('_') {
								goto l498
							}
							position++
							goto l495
						l498:
							position, tokenIndex = position495, tokenIndex495
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l490
							}
							position++
						}
					l495:
						goto l489
					l490:
						position, tokenIndex = position490, tokenIndex490
					}
				}
			l487:
				if buffer[position] != rune('@') {
					goto l485
				}
				position++
				{
					position499, tokenIndex499 := position, tokenIndex
					if buffer[position] != rune('h') {
						goto l500
					}
					position++
					goto l499
				l500:
					position, tokenIndex = position499, tokenIndex499
					if buffer[position] != rune('H') {
						goto l485
					}
					position++
				}
			l499:
				{
					position501, tokenIndex501 := position, tokenIndex
					if buffer[position] != rune('a') {
						goto l502
					}
					position++
					goto l501
				l502:
					position, tokenIndex = position501, tokenIndex501
					if buffer[position] != rune('A') {
						goto l485
					}
					position++
				}
			l501:
				add(ruleTOCRefHigh, position486)
			}
			return true
		l485:
			position, tokenIndex = position485, tokenIndex485
			return false
		},
		/* 39 TOCRefLow <- <('.' 'T' 'O' 'C' '.' '-' (('0' 'b') / ('.' 'L' ([a-z] / [A-Z] / '_' / [0-9])+)) ('@' ('l' / 'L')))> */
		func() bool {
			position503, tokenIndex503 := position, tokenIndex
			{
				position504 := position
				if buffer[position] != rune('.') {
					goto l503
				}
				position++
				if buffer[position] != rune('T') {
					goto l503
				}
				position++
				if buffer[position] != rune('O') {
					goto l503
				}
				position++
				if buffer[position] != rune('C') {
					goto l503
				}
				position++
				if buffer[position] != rune('.') {
					goto l503
				}
				position++
				if buffer[position] != rune('-') {
					goto l503
				}
				position++
				{
					position505, tokenIndex505 := position, tokenIndex
					if buffer[position] != rune('0') {
						goto l506
					}
					position++
					if buffer[position] != rune('b') {
						goto l506
					}
					position++
					goto l505
				l506:
					position, tokenIndex = position505, tokenIndex505
					if buffer[position] != rune('.') {
						goto l503
					}
					position++
					if buffer[position] != rune('L') {
						goto l503
					}
					position++
					{
						position509, tokenIndex509 := position, tokenIndex
						if c := buffer[position]; c < rune('a') || c > rune('z') {
							goto l510
						}
						position++
						goto l509
					l510:
						position, tokenIndex = position509, tokenIndex509
						if c := buffer[position]; c < rune('A') || c > rune('Z') {
							goto l511
						}
						position++
						goto l509
					l511:
						position, tokenIndex = position509, tokenIndex509
						if buffer[position] != rune('_') {
							goto l512
						}
						position++
						goto l509
					l512:
						position, tokenIndex = position509, tokenIndex509
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l503
						}
						position++
					}
				l509:
				l507:
					{
						position508, tokenIndex508 := position, tokenIndex
						{
							position513, tokenIndex513 := position, tokenIndex
							if c := buffer[position]; c < rune('a') || c > rune('z') {
								goto l514
							}
							position++
							goto l513
						l514:
							position, tokenIndex = position513, tokenIndex513
							if c := buffer[position]; c < rune('A') || c > rune('Z') {
								goto l515
							}
							position++
							goto l513
						l515:
							position, tokenIndex = position513, tokenIndex513
							if buffer[position] != rune('_') {
								goto l516
							}
							position++
							goto l513
						l516:
							position, tokenIndex = position513, tokenIndex513
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l508
							}
							position++
						}
					l513:
						goto l507
					l508:
						position, tokenIndex = position508, tokenIndex508
					}
				}
			l505:
				if buffer[position] != rune('@') {
					goto l503
				}
				position++
				{
					position517, tokenIndex517 := position, tokenIndex
					if buffer[position] != rune('l') {
						goto l518
					}
					position++
					goto l517
				l518:
					position, tokenIndex = position517, tokenIndex517
					if buffer[position] != rune('L') {
						goto l503
					}
					position++
				}
			l517:
				add(ruleTOCRefLow, position504)
			}
			return true
		l503:
			position, tokenIndex = position503, tokenIndex503
			return false
		},
		/* 40 IndirectionIndicator <- <'*'> */
		func() bool {
			position519, tokenIndex519 := position, tokenIndex
			{
				position520 := position
				if buffer[position] != rune('*') {
					goto l519
				}
				position++
				add(ruleIndirectionIndicator, position520)
			}
			return true
		l519:
			position, tokenIndex = position519, tokenIndex519
			return false
		},
		/* 41 RegisterOrConstant <- <((('%' ([a-z] / [A-Z]) ([a-z] / [A-Z] / ([0-9] / [0-9]))*) / ('$' [0-9]+ WS? '*' WS? '(' [0-9]+ WS? '-' WS? [0-9]+ ')') / ('$'? ((Offset Offset) / Offset)) / ('#' Offset ('*' [0-9]+ ('-' [0-9] [0-9]*)?)?) / ('#' '~'? '(' [0-9] WS? ('<' '<') WS? [0-9] [0-9]? ')') / (('#' / '$') '~'? ('0' 'x')? ([0-9] / [0-9] / ([a-f] / [A-F]))+) / ('$' '(' '-' [0-9]+ ')') / ARMRegister) !('f' / 'b' / ':' / '(' / '+' / '-'))> */
		func() bool {
			position521, tokenIndex521 := position, tokenIndex
			{
				position522 := position
				{
					position523, tokenIndex523 := position, tokenIndex
					if buffer[position] != rune('%') {
						goto l524
					}
					position++
					{
						position525, tokenIndex525 := position, tokenIndex
						if c := buffer[position]; c < rune('a') || c > rune('z') {
							goto l526
						}
						position++
						goto l525
					l526:
						position, tokenIndex = position525, tokenIndex525
						if c := buffer[position]; c < rune('A') || c > rune('Z') {
							goto l524
						}
						position++
					}
				l525:
				l527:
					{
						position528, tokenIndex528 := position, tokenIndex
						{
							position529, tokenIndex529 := position, tokenIndex
							if c := buffer[position]; c < rune('a') || c > rune('z') {
								goto l530
							}
							position++
							goto l529
						l530:
							position, tokenIndex = position529, tokenIndex529
							if c := buffer[position]; c < rune('A') || c > rune('Z') {
								goto l531
							}
							position++
							goto l529
						l531:
							position, tokenIndex = position529, tokenIndex529
							{
								position532, tokenIndex532 := position, tokenIndex
								if c := buffer[position]; c < rune('0') || c > rune('9') {
									goto l533
								}
								position++
								goto l532
							l533:
								position, tokenIndex = position532, tokenIndex532
								if c := buffer[position]; c < rune('0') || c > rune('9') {
									goto l528
								}
								position++
							}
						l532:
						}
					l529:
						goto l527
					l528:
						position, tokenIndex = position528, tokenIndex528
					}
					goto l523
				l524:
					position, tokenIndex = position523, tokenIndex523
					if buffer[position] != rune('$') {
						goto l534
					}
					position++
					if c := buffer[position]; c < rune('0') || c > rune('9') {
						goto l534
					}
					position++
				l535:
					{
						position536, tokenIndex536 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l536
						}
						position++
						goto l535
					l536:
						position, tokenIndex = position536, tokenIndex536
					}
					{
						position537, tokenIndex537 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l537
						}
						goto l538
					l537:
						position, tokenIndex = position537, tokenIndex537
					}
				l538:
					if buffer[position] != rune('*') {
						goto l534
					}
					position++
					{
						position539, tokenIndex539 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l539
						}
						goto l540
					l539:
						position, tokenIndex = position539, tokenIndex539
					}
				l540:
					if buffer[position] != rune('(') {
						goto l534
					}
					position++
					if c := buffer[position]; c < rune('0') || c > rune('9') {
						goto l534
					}
					position++
				l541:
					{
						position542, tokenIndex542 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l542
						}
						position++
						goto l541
					l542:
						position, tokenIndex = position542, tokenIndex542
					}
					{
						position543, tokenIndex543 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l543
						}
						goto l544
					l543:
						position, tokenIndex = position543, tokenIndex543
					}
				l544:
					if buffer[position] != rune('-') {
						goto l534
					}
					position++
					{
						position545, tokenIndex545 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l545
						}
						goto l546
					l545:
						position, tokenIndex = position545, tokenIndex545
					}
				l546:
					if c := buffer[position]; c < rune('0') || c > rune('9') {
						goto l534
					}
					position++
				l547:
					{
						position548, tokenIndex548 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l548
						}
						position++
						goto l547
					l548:
						position, tokenIndex = position548, tokenIndex548
					}
					if buffer[position] != rune(')') {
						goto l534
					}
					position++
					goto l523
				l534:
					position, tokenIndex = position523, tokenIndex523
					{
						position550, tokenIndex550 := position, tokenIndex
						if buffer[position] != rune('$') {
							goto l550
						}
						position++
						goto l551
					l550:
						position, tokenIndex = position550, tokenIndex550
					}
				l551:
					{
						position552, tokenIndex552 := position, tokenIndex
						if !_rules[ruleOffset]() {
							goto l553
						}
						if !_rules[ruleOffset]() {
							goto l553
						}
						goto l552
					l553:
						position, tokenIndex = position552, tokenIndex552
						if !_rules[ruleOffset]() {
							goto l549
						}
					}
				l552:
					goto l523
				l549:
					position, tokenIndex = position523, tokenIndex523
					if buffer[position] != rune('#') {
						goto l554
					}
					position++
					if !_rules[ruleOffset]() {
						goto l554
					}
					{
						position555, tokenIndex555 := position, tokenIndex
						if buffer[position] != rune('*') {
							goto l555
						}
						position++
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l555
						}
						position++
					l557:
						{
							position558, tokenIndex558 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l558
							}
							position++
							goto l557
						l558:
							position, tokenIndex = position558, tokenIndex558
						}
						{
							position559, tokenIndex559 := position, tokenIndex
							if buffer[position] != rune('-') {
								goto l559
							}
							position++
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l559
							}
							position++
						l561:
							{
								position562, tokenIndex562 := position, tokenIndex
								if c := buffer[position]; c < rune('0') || c > rune('9') {
									goto l562
								}
								position++
								goto l561
							l562:
								position, tokenIndex = position562, tokenIndex562
							}
							goto l560
						l559:
							position, tokenIndex = position559, tokenIndex559
						}
					l560:
						goto l556
					l555:
						position, tokenIndex = position555, tokenIndex555
					}
				l556:
					goto l523
				l554:
					position, tokenIndex = position523, tokenIndex523
					if buffer[position] != rune('#') {
						goto l563
					}
					position++
					{
						position564, tokenIndex564 := position, tokenIndex
						if buffer[position] != rune('~') {
							goto l564
						}
						position++
						goto l565
					l564:
						position, tokenIndex = position564, tokenIndex564
					}
				l565:
					if buffer[position] != rune('(') {
						goto l563
					}
					position++
					if c := buffer[position]; c < rune('0') || c > rune('9') {
						goto l563
					}
					position++
					{
						position566, tokenIndex566 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l566
						}
						goto l567
					l566:
						position, tokenIndex = position566, tokenIndex566
					}
				l567:
					if buffer[position] != rune('<') {
						goto l563
					}
					position++
					if buffer[position] != rune('<') {
						goto l563
					}
					position++
					{
						position568, tokenIndex568 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l568
						}
						goto l569
					l568:
						position, tokenIndex = position568, tokenIndex568
					}
				l569:
					if c := buffer[position]; c < rune('0') || c > rune('9') {
						goto l563
					}
					position++
					{
						position570, tokenIndex570 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l570
						}
						position++
						goto l571
					l570:
						position, tokenIndex = position570, tokenIndex570
					}
				l571:
					if buffer[position] != rune(')') {
						goto l563
					}
					position++
					goto l523
				l563:
					position, tokenIndex = position523, tokenIndex523
					{
						position573, tokenIndex573 := position, tokenIndex
						if buffer[position] != rune('#') {
							goto l574
						}
						position++
						goto l573
					l574:
						position, tokenIndex = position573, tokenIndex573
						if buffer[position] != rune('$') {
							goto l572
						}
						position++
					}
				l573:
					{
						position575, tokenIndex575 := position, tokenIndex
						if buffer[position] != rune('~') {
							goto l575
						}
						position++
						goto l576
					l575:
						position, tokenIndex = position575, tokenIndex575
					}
				l576:
					{
						position577, tokenIndex577 := position, tokenIndex
						if buffer[position] != rune('0') {
							goto l577
						}
						position++
						if buffer[position] != rune('x') {
							goto l577
						}
						position++
						goto l578
					l577:
						position, tokenIndex = position577, tokenIndex577
					}
				l578:
					{
						position581, tokenIndex581 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l582
						}
						position++
						goto l581
					l582:
						position, tokenIndex = position581, tokenIndex581
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l583
						}
						position++
						goto l581
					l583:
						position, tokenIndex = position581, tokenIndex581
						{
							position584, tokenIndex584 := position, tokenIndex
							if c := buffer[position]; c < rune('a') || c > rune('f') {
								goto l585
							}
							position++
							goto l584
						l585:
							position, tokenIndex = position584, tokenIndex584
							if c := buffer[position]; c < rune('A') || c > rune('F') {
								goto l572
							}
							position++
						}
					l584:
					}
				l581:
				l579:
					{
						position580, tokenIndex580 := position, tokenIndex
						{
							position586, tokenIndex586 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l587
							}
							position++
							goto l586
						l587:
							position, tokenIndex = position586, tokenIndex586
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l588
							}
							position++
							goto l586
						l588:
							position, tokenIndex = position586, tokenIndex586
							{
								position589, tokenIndex589 := position, tokenIndex
								if c := buffer[position]; c < rune('a') || c > rune('f') {
									goto l590
								}
								position++
								goto l589
							l590:
								position, tokenIndex = position589, tokenIndex589
								if c := buffer[position]; c < rune('A') || c > rune('F') {
									goto l580
								}
								position++
							}
						l589:
						}
					l586:
						goto l579
					l580:
						position, tokenIndex = position580, tokenIndex580
					}
					goto l523
				l572:
					position, tokenIndex = position523, tokenIndex523
					if buffer[position] != rune('$') {
						goto l591
					}
					position++
					if buffer[position] != rune('(') {
						goto l591
					}
					position++
					if buffer[position] != rune('-') {
						goto l591
					}
					position++
					if c := buffer[position]; c < rune('0') || c > rune('9') {
						goto l591
					}
					position++
				l592:
					{
						position593, tokenIndex593 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l593
						}
						position++
						goto l592
					l593:
						position, tokenIndex = position593, tokenIndex593
					}
					if buffer[position] != rune(')') {
						goto l591
					}
					position++
					goto l523
				l591:
					position, tokenIndex = position523, tokenIndex523
					if !_rules[ruleARMRegister]() {
						goto l521
					}
				}
			l523:
				{
					position594, tokenIndex594 := position, tokenIndex
					{
						position595, tokenIndex595 := position, tokenIndex
						if buffer[position] != rune('f') {
							goto l596
						}
						position++
						goto l595
					l596:
						position, tokenIndex = position595, tokenIndex595
						if buffer[position] != rune('b') {
							goto l597
						}
						position++
						goto l595
					l597:
						position, tokenIndex = position595, tokenIndex595
						if buffer[position] != rune(':') {
							goto l598
						}
						position++
						goto l595
					l598:
						position, tokenIndex = position595, tokenIndex595
						if buffer[position] != rune('(') {
							goto l599
						}
						position++
						goto l595
					l599:
						position, tokenIndex = position595, tokenIndex595
						if buffer[position] != rune('+') {
							goto l600
						}
						position++
						goto l595
					l600:
						position, tokenIndex = position595, tokenIndex595
						if buffer[position] != rune('-') {
							goto l594
						}
						position++
					}
				l595:
					goto l521
				l594:
					position, tokenIndex = position594, tokenIndex594
				}
				add(ruleRegisterOrConstant, position522)
			}
			return true
		l521:
			position, tokenIndex = position521, tokenIndex521
			return false
		},
		/* 42 ARMConstantTweak <- <(((('u' / 's') (('x' / 'X') ('t' / 'T')) ('x' / 'w' / 'h' / 'b')) / (('l' / 'L') ('s' / 'S') ('l' / 'L')) / (('l' / 'L') ('s' / 'S') ('r' / 'R')) / (('r' / 'R') ('o' / 'O') ('r' / 'R')) / (('a' / 'A') ('s' / 'S') ('r' / 'R'))) (WS '#'? Offset)?)> */
		func() bool {
			position601, tokenIndex601 := position, tokenIndex
			{
				position602 := position
				{
					position603, tokenIndex603 := position, tokenIndex
					{
						position605, tokenIndex605 := position, tokenIndex
						if buffer[position] != rune('u') {
							goto l606
						}
						position++
						goto l605
					l606:
						position, tokenIndex = position605, tokenIndex605
						if buffer[position] != rune('s') {
							goto l604
						}
						position++
					}
				l605:
					{
						position607, tokenIndex607 := position, tokenIndex
						if buffer[position] != rune('x') {
							goto l608
						}
						position++
						goto l607
					l608:
						position, tokenIndex = position607, tokenIndex607
						if buffer[position] != rune('X') {
							goto l604
						}
						position++
					}
				l607:
					{
						position609, tokenIndex609 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l610
						}
						position++
						goto l609
					l610:
						position, tokenIndex = position609, tokenIndex609
						if buffer[position] != rune('T') {
							goto l604
						}
						position++
					}
				l609:
					{
						position611, tokenIndex611 := position, tokenIndex
						if buffer[position] != rune('x') {
							goto l612
						}
						position++
						goto l611
					l612:
						position, tokenIndex = position611, tokenIndex611
						if buffer[position] != rune('w') {
							goto l613
						}
						position++
						goto l611
					l613:
						position, tokenIndex = position611, tokenIndex611
						if buffer[position] != rune('h') {
							goto l614
						}
						position++
						goto l611
					l614:
						position, tokenIndex = position611, tokenIndex611
						if buffer[position] != rune('b') {
							goto l604
						}
						position++
					}
				l611:
					goto l603
				l604:
					position, tokenIndex = position603, tokenIndex603
					{
						position616, tokenIndex616 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l617
						}
						position++
						goto l616
					l617:
						position, tokenIndex = position616, tokenIndex616
						if buffer[position] != rune('L') {
							goto l615
						}
						position++
					}
				l616:
					{
						position618, tokenIndex618 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l619
						}
						position++
						goto l618
					l619:
						position, tokenIndex = position618, tokenIndex618
						if buffer[position] != rune('S') {
							goto l615
						}
						position++
					}
				l618:
					{
						position620, tokenIndex620 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l621
						}
						position++
						goto l620
					l621:
						position, tokenIndex = position620, tokenIndex620
						if buffer[position] != rune('L') {
							goto l615
						}
						position++
					}
				l620:
					goto l603
				l615:
					position, tokenIndex = position603, tokenIndex603
					{
						position623, tokenIndex623 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l624
						}
						position++
						goto l623
					l624:
						position, tokenIndex = position623, tokenIndex623
						if buffer[position] != rune('L') {
							goto l622
						}
						position++
					}
				l623:
					{
						position625, tokenIndex625 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l626
						}
						position++
						goto l625
					l626:
						position, tokenIndex = position625, tokenIndex625
						if buffer[position] != rune('S') {
							goto l622
						}
						position++
					}
				l625:
					{
						position627, tokenIndex627 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l628
						}
						position++
						goto l627
					l628:
						position, tokenIndex = position627, tokenIndex627
						if buffer[position] != rune('R') {
							goto l622
						}
						position++
					}
				l627:
					goto l603
				l622:
					position, tokenIndex = position603, tokenIndex603
					{
						position630, tokenIndex630 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l631
						}
						position++
						goto l630
					l631:
						position, tokenIndex = position630, tokenIndex630
						if buffer[position] != rune('R') {
							goto l629
						}
						position++
					}
				l630:
					{
						position632, tokenIndex632 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l633
						}
						position++
						goto l632
					l633:
						position, tokenIndex = position632, tokenIndex632
						if buffer[position] != rune('O') {
							goto l629
						}
						position++
					}
				l632:
					{
						position634, tokenIndex634 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l635
						}
						position++
						goto l634
					l635:
						position, tokenIndex = position634, tokenIndex634
						if buffer[position] != rune('R') {
							goto l629
						}
						position++
					}
				l634:
					goto l603
				l629:
					position, tokenIndex = position603, tokenIndex603
					{
						position636, tokenIndex636 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l637
						}
						position++
						goto l636
					l637:
						position, tokenIndex = position636, tokenIndex636
						if buffer[position] != rune('A') {
							goto l601
						}
						position++
					}
				l636:
					{
						position638, tokenIndex638 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l639
						}
						position++
						goto l638
					l639:
						position, tokenIndex = position638, tokenIndex638
						if buffer[position] != rune('S') {
							goto l601
						}
						position++
					}
				l638:
					{
						position640, tokenIndex640 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l641
						}
						position++
						goto l640
					l641:
						position, tokenIndex = position640, tokenIndex640
						if buffer[position] != rune('R') {
							goto l601
						}
						position++
					}
				l640:
				}
			l603:
				{
					position642, tokenIndex642 := position, tokenIndex
					if !_rules[ruleWS]() {
						goto l642
					}
					{
						position644, tokenIndex644 := position, tokenIndex
						if buffer[position] != rune('#') {
							goto l644
						}
						position++
						goto l645
					l644:
						position, tokenIndex = position644, tokenIndex644
					}
				l645:
					if !_rules[ruleOffset]() {
						goto l642
					}
					goto l643
				l642:
					position, tokenIndex = position642, tokenIndex642
				}
			l643:
				add(ruleARMConstantTweak, position602)
			}
			return true
		l601:
			position, tokenIndex = position601, tokenIndex601
			return false
		},
		/* 43 ARMRegister <- <((('s' / 'S') ('p' / 'P')) / (('x' / 'w' / 'd' / 'q' / 's' / 'h' / 'b') [0-9] [0-9]?) / (('x' / 'X') ('z' / 'Z') ('r' / 'R')) / (('w' / 'W') ('z' / 'Z') ('r' / 'R')) / (('n' / 'N') ('z' / 'Z') ('c' / 'C') ('v' / 'V')) / ARMVectorRegister / ('{' WS? ARMVectorRegister WS? ((',' / '-') WS? ARMVectorRegister)* WS? '}' ('[' [0-9] [0-9]? ']')?))> */
		func() bool {
			position646, tokenIndex646 := position, tokenIndex
			{
				position647 := position
				{
					position648, tokenIndex648 := position, tokenIndex
					{
						position650, tokenIndex650 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l651
						}
						position++
						goto l650
					l651:
						position, tokenIndex = position650, tokenIndex650
						if buffer[position] != rune('S') {
							goto l649
						}
						position++
					}
				l650:
					{
						position652, tokenIndex652 := position, tokenIndex
						if buffer[position] != rune('p') {
							goto l653
						}
						position++
						goto l652
					l653:
						position, tokenIndex = position652, tokenIndex652
						if buffer[position] != rune('P') {
							goto l649
						}
						position++
					}
				l652:
					goto l648
				l649:
					position, tokenIndex = position648, tokenIndex648
					{
						position655, tokenIndex655 := position, tokenIndex
						if buffer[position] != rune('x') {
							goto l656
						}
						position++
						goto l655
					l656:
						position, tokenIndex = position655, tokenIndex655
						if buffer[position] != rune('w') {
							goto l657
						}
						position++
						goto l655
					l657:
						position, tokenIndex = position655, tokenIndex655
						if buffer[position] != rune('d') {
							goto l658
						}
						position++
						goto l655
					l658:
						position, tokenIndex = position655, tokenIndex655
						if buffer[position] != rune('q') {
							goto l659
						}
						position++
						goto l655
					l659:
						position, tokenIndex = position655, tokenIndex655
						if buffer[position] != rune('s') {
							goto l660
						}
						position++
						goto l655
					l660:
						position, tokenIndex = position655, tokenIndex655
						if buffer[position] != rune('h') {
							goto l661
						}
						position++
						goto l655
					l661:
						position, tokenIndex = position655, tokenIndex655
						if buffer[position] != rune('b') {
							goto l654
						}
						position++
					}
				l655:
					if c := buffer[position]; c < rune('0') || c > rune('9') {
						goto l654
					}
					position++
					{
						position662, tokenIndex662 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l662
						}
						position++
						goto l663
					l662:
						position, tokenIndex = position662, tokenIndex662
					}
				l663:
					goto l648
				l654:
					position, tokenIndex = position648, tokenIndex648
					{
						position665, tokenIndex665 := position, tokenIndex
						if buffer[position] != rune('x') {
							goto l666
						}
						position++
						goto l665
					l666:
						position, tokenIndex = position665, tokenIndex665
						if buffer[position] != rune('X') {
							goto l664
						}
						position++
					}
				l665:
					{
						position667, tokenIndex667 := position, tokenIndex
						if buffer[position] != rune('z') {
							goto l668
						}
						position++
						goto l667
					l668:
						position, tokenIndex = position667, tokenIndex667
						if buffer[position] != rune('Z') {
							goto l664
						}
						position++
					}
				l667:
					{
						position669, tokenIndex669 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l670
						}
						position++
						goto l669
					l670:
						position, tokenIndex = position669, tokenIndex669
						if buffer[position] != rune('R') {
							goto l664
						}
						position++
					}
				l669:
					goto l648
				l664:
					position, tokenIndex = position648, tokenIndex648
					{
						position672, tokenIndex672 := position, tokenIndex
						if buffer[position] != rune('w') {
							goto l673
						}
						position++
						goto l672
					l673:
						position, tokenIndex = position672, tokenIndex672
						if buffer[position] != rune('W') {
							goto l671
						}
						position++
					}
				l672:
					{
						position674, tokenIndex674 := position, tokenIndex
						if buffer[position] != rune('z') {
							goto l675
						}
						position++
						goto l674
					l675:
						position, tokenIndex = position674, tokenIndex674
						if buffer[position] != rune('Z') {
							goto l671
						}
						position++
					}
				l674:
					{
						position676, tokenIndex676 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l677
						}
						position++
						goto l676
					l677:
						position, tokenIndex = position676, tokenIndex676
						if buffer[position] != rune('R') {
							goto l671
						}
						position++
					}
				l676:
					goto l648
				l671:
					position, tokenIndex = position648, tokenIndex648
					{
						position679, tokenIndex679 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l680
						}
						position++
						goto l679
					l680:
						position, tokenIndex = position679, tokenIndex679
						if buffer[position] != rune('N') {
							goto l678
						}
						position++
					}
				l679:
					{
						position681, tokenIndex681 := position, tokenIndex
						if buffer[position] != rune('z') {
							goto l682
						}
						position++
						goto l681
					l682:
						position, tokenIndex = position681, tokenIndex681
						if buffer[position] != rune('Z') {
							goto l678
						}
						position++
					}
				l681:
					{
						position683, tokenIndex683 := position, tokenIndex
						if buffer[position] != rune('c') {
							goto l684
						}
						position++
						goto l683
					l684:
						position, tokenIndex = position683, tokenIndex683
						if buffer[position] != rune('C') {
							goto l678
						}
						position++
					}
				l683:
					{
						position685, tokenIndex685 := position, tokenIndex
						if buffer[position] != rune('v') {
							goto l686
						}
						position++
						goto l685
					l686:
						position, tokenIndex = position685, tokenIndex685
						if buffer[position] != rune('V') {
							goto l678
						}
						position++
					}
				l685:
					goto l648
				l678:
					position, tokenIndex = position648, tokenIndex648
					if !_rules[ruleARMVectorRegister]() {
						goto l687
					}
					goto l648
				l687:
					position, tokenIndex = position648, tokenIndex648
					if buffer[position] != rune('{') {
						goto l646
					}
					position++
					{
						position688, tokenIndex688 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l688
						}
						goto l689
					l688:
						position, tokenIndex = position688, tokenIndex688
					}
				l689:
					if !_rules[ruleARMVectorRegister]() {
						goto l646
					}
					{
						position690, tokenIndex690 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l690
						}
						goto l691
					l690:
						position, tokenIndex = position690, tokenIndex690
					}
				l691:
				l692:
					{
						position693, tokenIndex693 := position, tokenIndex
						{
							position694, tokenIndex694 := position, tokenIndex
							if buffer[position] != rune(',') {
								goto l695
							}
							position++
							goto l694
						l695:
							position, tokenIndex = position694, tokenIndex694
							if buffer[position] != rune('-') {
								goto l693
							}
							position++
						}
					l694:
						{
							position696, tokenIndex696 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l696
							}
							goto l697
						l696:
							position, tokenIndex = position696, tokenIndex696
						}
					l697:
						if !_rules[ruleARMVectorRegister]() {
							goto l693
						}
						goto l692
					l693:
						position, tokenIndex = position693, tokenIndex693
					}
					{
						position698, tokenIndex698 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l698
						}
						goto l699
					l698:
						position, tokenIndex = position698, tokenIndex698
					}
				l699:
					if buffer[position] != rune('}') {
						goto l646
					}
					position++
					{
						position700, tokenIndex700 := position, tokenIndex
						if buffer[position] != rune('[') {
							goto l700
						}
						position++
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l700
						}
						position++
						{
							position702, tokenIndex702 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l702
							}
							position++
							goto l703
						l702:
							position, tokenIndex = position702, tokenIndex702
						}
					l703:
						if buffer[position] != rune(']') {
							goto l700
						}
						position++
						goto l701
					l700:
						position, tokenIndex = position700, tokenIndex700
					}
				l701:
				}
			l648:
				add(ruleARMRegister, position647)
			}
			return true
		l646:
			position, tokenIndex = position646, tokenIndex646
			return false
		},
		/* 44 ARMVectorRegister <- <(('v' / 'V') [0-9] [0-9]? ('.' [0-9]* ('b' / 's' / 'd' / 'h' / 'q') ('[' [0-9] [0-9]? ']')?)?)> */
		func() bool {
			position704, tokenIndex704 := position, tokenIndex
			{
				position705 := position
				{
					position706, tokenIndex706 := position, tokenIndex
					if buffer[position] != rune('v') {
						goto l707
					}
					position++
					goto l706
				l707:
					position, tokenIndex = position706, tokenIndex706
					if buffer[position] != rune('V') {
						goto l704
					}
					position++
				}
			l706:
				if c := buffer[position]; c < rune('0') || c > rune('9') {
					goto l704
				}
				position++
				{
					position708, tokenIndex708 := position, tokenIndex
					if c := buffer[position]; c < rune('0') || c > rune('9') {
						goto l708
					}
					position++
					goto l709
				l708:
					position, tokenIndex = position708, tokenIndex708
				}
			l709:
				{
					position710, tokenIndex710 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l710
					}
					position++
				l712:
					{
						position713, tokenIndex713 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l713
						}
						position++
						goto l712
					l713:
						position, tokenIndex = position713, tokenIndex713
					}
					{
						position714, tokenIndex714 := position, tokenIndex
						if buffer[position] != rune('b') {
							goto l715
						}
						position++
						goto l714
					l715:
						position, tokenIndex = position714, tokenIndex714
						if buffer[position] != rune('s') {
							goto l716
						}
						position++
						goto l714
					l716:
						position, tokenIndex = position714, tokenIndex714
						if buffer[position] != rune('d') {
							goto l717
						}
						position++
						goto l714
					l717:
						position, tokenIndex = position714, tokenIndex714
						if buffer[position] != rune('h') {
							goto l718
						}
						position++
						goto l714
					l718:
						position, tokenIndex = position714, tokenIndex714
						if buffer[position] != rune('q') {
							goto l710
						}
						position++
					}
				l714:
					{
						position719, tokenIndex719 := position, tokenIndex
						if buffer[position] != rune('[') {
							goto l719
						}
						position++
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l719
						}
						position++
						{
							position721, tokenIndex721 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l721
							}
							position++
							goto l722
						l721:
							position, tokenIndex = position721, tokenIndex721
						}
					l722:
						if buffer[position] != rune(']') {
							goto l719
						}
						position++
						goto l720
					l719:
						position, tokenIndex = position719, tokenIndex719
					}
				l720:
					goto l711
				l710:
					position, tokenIndex = position710, tokenIndex710
				}
			l711:
				add(ruleARMVectorRegister, position705)
			}
			return true
		l704:
			position, tokenIndex = position704, tokenIndex704
			return false
		},
		/* 45 MemoryRef <- <((SymbolRef BaseIndexScale) / SymbolRef / Low12BitsSymbolRef / (Offset* BaseIndexScale) / (SegmentRegister Offset BaseIndexScale) / (SegmentRegister BaseIndexScale) / (SegmentRegister Offset) / ARMBaseIndexScale / BaseIndexScale)> */
		func() bool {
			position723, tokenIndex723 := position, tokenIndex
			{
				position724 := position
				{
					position725, tokenIndex725 := position, tokenIndex
					if !_rules[ruleSymbolRef]() {
						goto l726
					}
					if !_rules[ruleBaseIndexScale]() {
						goto l726
					}
					goto l725
				l726:
					position, tokenIndex = position725, tokenIndex725
					if !_rules[ruleSymbolRef]() {
						goto l727
					}
					goto l725
				l727:
					position, tokenIndex = position725, tokenIndex725
					if !_rules[ruleLow12BitsSymbolRef]() {
						goto l728
					}
					goto l725
				l728:
					position, tokenIndex = position725, tokenIndex725
				l730:
					{
						position731, tokenIndex731 := position, tokenIndex
						if !_rules[ruleOffset]() {
							goto l731
						}
						goto l730
					l731:
						position, tokenIndex = position731, tokenIndex731
					}
					if !_rules[ruleBaseIndexScale]() {
						goto l729
					}
					goto l725
				l729:
					position, tokenIndex = position725, tokenIndex725
					if !_rules[ruleSegmentRegister]() {
						goto l732
					}
					if !_rules[ruleOffset]() {
						goto l732
					}
					if !_rules[ruleBaseIndexScale]() {
						goto l732
					}
					goto l725
				l732:
					position, tokenIndex = position725, tokenIndex725
					if !_rules[ruleSegmentRegister]() {
						goto l733
					}
					if !_rules[ruleBaseIndexScale]() {
						goto l733
					}
					goto l725
				l733:
					position, tokenIndex = position725, tokenIndex725
					if !_rules[ruleSegmentRegister]() {
						goto l734
					}
					if !_rules[ruleOffset]() {
						goto l734
					}
					goto l725
				l734:
					position, tokenIndex = position725, tokenIndex725
					if !_rules[ruleARMBaseIndexScale]() {
						goto l735
					}
					goto l725
				l735:
					position, tokenIndex = position725, tokenIndex725
					if !_rules[ruleBaseIndexScale]() {
						goto l723
					}
				}
			l725:
				add(ruleMemoryRef, position724)
			}
			return true
		l723:
			position, tokenIndex = position723, tokenIndex723
			return false
		},
		/* 46 SymbolRef <- <((Offset* '+')? (LocalSymbol / SymbolName) Offset* ('@' Section Offset*)?)> */
		func() bool {
			position736, tokenIndex736 := position, tokenIndex
			{
				position737 := position
				{
					position738, tokenIndex738 := position, tokenIndex
				l740:
					{
						position741, tokenIndex741 := position, tokenIndex
						if !_rules[ruleOffset]() {
							goto l741
						}
						goto l740
					l741:
						position, tokenIndex = position741, tokenIndex741
					}
					if buffer[position] != rune('+') {
						goto l738
					}
					position++
					goto l739
				l738:
					position, tokenIndex = position738, tokenIndex738
				}
			l739:
				{
					position742, tokenIndex742 := position, tokenIndex
					if !_rules[ruleLocalSymbol]() {
						goto l743
					}
					goto l742
				l743:
					position, tokenIndex = position742, tokenIndex742
					if !_rules[ruleSymbolName]() {
						goto l736
					}
				}
			l742:
			l744:
				{
					position745, tokenIndex745 := position, tokenIndex
					if !_rules[ruleOffset]() {
						goto l745
					}
					goto l744
				l745:
					position, tokenIndex = position745, tokenIndex745
				}
				{
					position746, tokenIndex746 := position, tokenIndex
					if buffer[position] != rune('@') {
						goto l746
					}
					position++
					if !_rules[ruleSection]() {
						goto l746
					}
				l748:
					{
						position749, tokenIndex749 := position, tokenIndex
						if !_rules[ruleOffset]() {
							goto l749
						}
						goto l748
					l749:
						position, tokenIndex = position749, tokenIndex749
					}
					goto l747
				l746:
					position, tokenIndex = position746, tokenIndex746
				}
			l747:
				add(ruleSymbolRef, position737)
			}
			return true
		l736:
			position, tokenIndex = position736, tokenIndex736
			return false
		},
		/* 47 Low12BitsSymbolRef <- <(':' ('l' / 'L') ('o' / 'O') '1' '2' ':' (LocalSymbol / SymbolName) Offset?)> */
		func() bool {
			position750, tokenIndex750 := position, tokenIndex
			{
				position751 := position
				if buffer[position] != rune(':') {
					goto l750
				}
				position++
				{
					position752, tokenIndex752 := position, tokenIndex
					if buffer[position] != rune('l') {
						goto l753
					}
					position++
					goto l752
				l753:
					position, tokenIndex = position752, tokenIndex752
					if buffer[position] != rune('L') {
						goto l750
					}
					position++
				}
			l752:
				{
					position754, tokenIndex754 := position, tokenIndex
					if buffer[position] != rune('o') {
						goto l755
					}
					position++
					goto l754
				l755:
					position, tokenIndex = position754, tokenIndex754
					if buffer[position] != rune('O') {
						goto l750
					}
					position++
				}
			l754:
				if buffer[position] != rune('1') {
					goto l750
				}
				position++
				if buffer[position] != rune('2') {
					goto l750
				}
				position++
				if buffer[position] != rune(':') {
					goto l750
				}
				position++
				{
					position756, tokenIndex756 := position, tokenIndex
					if !_rules[ruleLocalSymbol]() {
						goto l757
					}
					goto l756
				l757:
					position, tokenIndex = position756, tokenIndex756
					if !_rules[ruleSymbolName]() {
						goto l750
					}
				}
			l756:
				{
					position758, tokenIndex758 := position, tokenIndex
					if !_rules[ruleOffset]() {
						goto l758
					}
					goto l759
				l758:
					position, tokenIndex = position758, tokenIndex758
				}
			l759:
				add(ruleLow12BitsSymbolRef, position751)
			}
			return true
		l750:
			position, tokenIndex = position750, tokenIndex750
			return false
		},
		/* 48 ARMBaseIndexScale <- <('[' ARMRegister (',' WS? (('#'? Offset (('*' [0-9]+) / ('*' '(' [0-9]+ Operator [0-9]+ ')') / ('+' [0-9]+)*)?) / ('#'? ARMGOTLow12) / ('#'? Low12BitsSymbolRef) / ARMRegister) (',' WS? ARMConstantTweak)?)? ']' ARMPostincrement?)> */
		func() bool {
			position760, tokenIndex760 := position, tokenIndex
			{
				position761 := position
				if buffer[position] != rune('[') {
					goto l760
				}
				position++
				if !_rules[ruleARMRegister]() {
					goto l760
				}
				{
					position762, tokenIndex762 := position, tokenIndex
					if buffer[position] != rune(',') {
						goto l762
					}
					position++
					{
						position764, tokenIndex764 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l764
						}
						goto l765
					l764:
						position, tokenIndex = position764, tokenIndex764
					}
				l765:
					{
						position766, tokenIndex766 := position, tokenIndex
						{
							position768, tokenIndex768 := position, tokenIndex
							if buffer[position] != rune('#') {
								goto l768
							}
							position++
							goto l769
						l768:
							position, tokenIndex = position768, tokenIndex768
						}
					l769:
						if !_rules[ruleOffset]() {
							goto l767
						}
						{
							position770, tokenIndex770 := position, tokenIndex
							{
								position772, tokenIndex772 := position, tokenIndex
								if buffer[position] != rune('*') {
									goto l773
								}
								position++
								if c := buffer[position]; c < rune('0') || c > rune('9') {
									goto l773
								}
								position++
							l774:
								{
									position775, tokenIndex775 := position, tokenIndex
									if c := buffer[position]; c < rune('0') || c > rune('9') {
										goto l775
									}
									position++
									goto l774
								l775:
									position, tokenIndex = position775, tokenIndex775
								}
								goto l772
							l773:
								position, tokenIndex = position772, tokenIndex772
								if buffer[position] != rune('*') {
									goto l776
								}
								position++
								if buffer[position] != rune('(') {
									goto l776
								}
								position++
								if c := buffer[position]; c < rune('0') || c > rune('9') {
									goto l776
								}
								position++
							l777:
								{
									position778, tokenIndex778 := position, tokenIndex
									if c := buffer[position]; c < rune('0') || c > rune('9') {
										goto l778
									}
									position++
									goto l777
								l778:
									position, tokenIndex = position778, tokenIndex778
								}
								if !_rules[ruleOperator]() {
									goto l776
								}
								if c := buffer[position]; c < rune('0') || c > rune('9') {
									goto l776
								}
								position++
							l779:
								{
									position780, tokenIndex780 := position, tokenIndex
									if c := buffer[position]; c < rune('0') || c > rune('9') {
										goto l780
									}
									position++
									goto l779
								l780:
									position, tokenIndex = position780, tokenIndex780
								}
								if buffer[position] != rune(')') {
									goto l776
								}
								position++
								goto l772
							l776:
								position, tokenIndex = position772, tokenIndex772
							l781:
								{
									position782, tokenIndex782 := position, tokenIndex
									if buffer[position] != rune('+') {
										goto l782
									}
									position++
									if c := buffer[position]; c < rune('0') || c > rune('9') {
										goto l782
									}
									position++
								l783:
									{
										position784, tokenIndex784 := position, tokenIndex
										if c := buffer[position]; c < rune('0') || c > rune('9') {
											goto l784
										}
										position++
										goto l783
									l784:
										position, tokenIndex = position784, tokenIndex784
									}
									goto l781
								l782:
									position, tokenIndex = position782, tokenIndex782
								}
							}
						l772:
							goto l771

							position, tokenIndex = position770, tokenIndex770
						}
					l771:
						goto l766
					l767:
						position, tokenIndex = position766, tokenIndex766
						{
							position786, tokenIndex786 := position, tokenIndex
							if buffer[position] != rune('#') {
								goto l786
							}
							position++
							goto l787
						l786:
							position, tokenIndex = position786, tokenIndex786
						}
					l787:
						if !_rules[ruleARMGOTLow12]() {
							goto l785
						}
						goto l766
					l785:
						position, tokenIndex = position766, tokenIndex766
						{
							position789, tokenIndex789 := position, tokenIndex
							if buffer[position] != rune('#') {
								goto l789
							}
							position++
							goto l790
						l789:
							position, tokenIndex = position789, tokenIndex789
						}
					l790:
						if !_rules[ruleLow12BitsSymbolRef]() {
							goto l788
						}
						goto l766
					l788:
						position, tokenIndex = position766, tokenIndex766
						if !_rules[ruleARMRegister]() {
							goto l762
						}
					}
				l766:
					{
						position791, tokenIndex791 := position, tokenIndex
						if buffer[position] != rune(',') {
							goto l791
						}
						position++
						{
							position793, tokenIndex793 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l793
							}
							goto l794
						l793:
							position, tokenIndex = position793, tokenIndex793
						}
					l794:
						if !_rules[ruleARMConstantTweak]() {
							goto l791
						}
						goto l792
					l791:
						position, tokenIndex = position791, tokenIndex791
					}
				l792:
					goto l763
				l762:
					position, tokenIndex = position762, tokenIndex762
				}
			l763:
				if buffer[position] != rune(']') {
					goto l760
				}
				position++
				{
					position795, tokenIndex795 := position, tokenIndex
					if !_rules[ruleARMPostincrement]() {
						goto l795
					}
					goto l796
				l795:
					position, tokenIndex = position795, tokenIndex795
				}
			l796:
				add(ruleARMBaseIndexScale, position761)
			}
			return true
		l760:
			position, tokenIndex = position760, tokenIndex760
			return false
		},
		/* 49 ARMGOTLow12 <- <(':' ('g' / 'G') ('o' / 'O') ('t' / 'T') '_' ('l' / 'L') ('o' / 'O') '1' '2' ':' SymbolName)> */
		func() bool {
			position797, tokenIndex797 := position, tokenIndex
			{
				position798 := position
				if buffer[position] != rune(':') {
					goto l797
				}
				position++
				{
					position799, tokenIndex799 := position, tokenIndex
					if buffer[position] != rune('g') {
						goto l800
					}
					position++
					goto l799
				l800:
					position, tokenIndex = position799, tokenIndex799
					if buffer[position] != rune('G') {
						goto l797
					}
					position++
				}
			l799:
				{
					position801, tokenIndex801 := position, tokenIndex
					if buffer[position] != rune('o') {
						goto l802
					}
					position++
					goto l801
				l802:
					position, tokenIndex = position801, tokenIndex801
					if buffer[position] != rune('O') {
						goto l797
					}
					position++
				}
			l801:
				{
					position803, tokenIndex803 := position, tokenIndex
					if buffer[position] != rune('t') {
						goto l804
					}
					position++
					goto l803
				l804:
					position, tokenIndex = position803, tokenIndex803
					if buffer[position] != rune('T') {
						goto l797
					}
					position++
				}
			l803:
				if buffer[position] != rune('_') {
					goto l797
				}
				position++
				{
					position805, tokenIndex805 := position, tokenIndex
					if buffer[position] != rune('l') {
						goto l806
					}
					position++
					goto l805
				l806:
					position, tokenIndex = position805, tokenIndex805
					if buffer[position] != rune('L') {
						goto l797
					}
					position++
				}
			l805:
				{
					position807, tokenIndex807 := position, tokenIndex
					if buffer[position] != rune('o') {
						goto l808
					}
					position++
					goto l807
				l808:
					position, tokenIndex = position807, tokenIndex807
					if buffer[position] != rune('O') {
						goto l797
					}
					position++
				}
			l807:
				if buffer[position] != rune('1') {
					goto l797
				}
				position++
				if buffer[position] != rune('2') {
					goto l797
				}
				position++
				if buffer[position] != rune(':') {
					goto l797
				}
				position++
				if !_rules[ruleSymbolName]() {
					goto l797
				}
				add(ruleARMGOTLow12, position798)
			}
			return true
		l797:
			position, tokenIndex = position797, tokenIndex797
			return false
		},
		/* 50 ARMPostincrement <- <'!'> */
		func() bool {
			position809, tokenIndex809 := position, tokenIndex
			{
				position810 := position
				if buffer[position] != rune('!') {
					goto l809
				}
				position++
				add(ruleARMPostincrement, position810)
			}
			return true
		l809:
			position, tokenIndex = position809, tokenIndex809
			return false
		},
		/* 51 BaseIndexScale <- <('(' RegisterOrConstant? WS? (',' WS? RegisterOrConstant WS? (',' [0-9]+)?)? ')')> */
		func() bool {
			position811, tokenIndex811 := position, tokenIndex
			{
				position812 := position
				if buffer[position] != rune('(') {
					goto l811
				}
				position++
				{
					position813, tokenIndex813 := position, tokenIndex
					if !_rules[ruleRegisterOrConstant]() {
						goto l813
					}
					goto l814
				l813:
					position, tokenIndex = position813, tokenIndex813
				}
			l814:
				{
					position815, tokenIndex815 := position, tokenIndex
					if !_rules[ruleWS]() {
						goto l815
					}
					goto l816
				l815:
					position, tokenIndex = position815, tokenIndex815
				}
			l816:
				{
					position817, tokenIndex817 := position, tokenIndex
					if buffer[position] != rune(',') {
						goto l817
					}
					position++
					{
						position819, tokenIndex819 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l819
						}
						goto l820
					l819:
						position, tokenIndex = position819, tokenIndex819
					}
				l820:
					if !_rules[ruleRegisterOrConstant]() {
						goto l817
					}
					{
						position821, tokenIndex821 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l821
						}
						goto l822
					l821:
						position, tokenIndex = position821, tokenIndex821
					}
				l822:
					{
						position823, tokenIndex823 := position, tokenIndex
						if buffer[position] != rune(',') {
							goto l823
						}
						position++
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l823
						}
						position++
					l825:
						{
							position826, tokenIndex826 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l826
							}
							position++
							goto l825
						l826:
							position, tokenIndex = position826, tokenIndex826
						}
						goto l824
					l823:
						position, tokenIndex = position823, tokenIndex823
					}
				l824:
					goto l818
				l817:
					position, tokenIndex = position817, tokenIndex817
				}
			l818:
				if buffer[position] != rune(')') {
					goto l811
				}
				position++
				add(ruleBaseIndexScale, position812)
			}
			return true
		l811:
			position, tokenIndex = position811, tokenIndex811
			return false
		},
		/* 52 Operator <- <('+' / '-')> */
		func() bool {
			position827, tokenIndex827 := position, tokenIndex
			{
				position828 := position
				{
					position829, tokenIndex829 := position, tokenIndex
					if buffer[position] != rune('+') {
						goto l830
					}
					position++
					goto l829
				l830:
					position, tokenIndex = position829, tokenIndex829
					if buffer[position] != rune('-') {
						goto l827
					}
					position++
				}
			l829:
				add(ruleOperator, position828)
			}
			return true
		l827:
			position, tokenIndex = position827, tokenIndex827
			return false
		},
		/* 53 OffsetOperator <- <('+' / '-' / '*')> */
		func() bool {
			position831, tokenIndex831 := position, tokenIndex
			{
				position832 := position
				{
					position833, tokenIndex833 := position, tokenIndex
					if buffer[position] != rune('+') {
						goto l834
					}
					position++
					goto l833
				l834:
					position, tokenIndex = position833, tokenIndex833
					if buffer[position] != rune('-') {
						goto l835
					}
					position++
					goto l833
				l835:
					position, tokenIndex = position833, tokenIndex833
					if buffer[position] != rune('*') {
						goto l831
					}
					position++
				}
			l833:
				add(ruleOffsetOperator, position832)
			}
			return true
		l831:
			position, tokenIndex = position831, tokenIndex831
			return false
		},
		/* 54 Offset <- <('+'? '-'? (('0' ('b' / 'B') ('0' / '1')+) / ('0' ('x' / 'X') ([0-9] / [0-9] / ([a-f] / [A-F]))+) / ((([0-9]+ WS OffsetOperator [0-9]+) / ([0-9]+ (OffsetOperator '(' [0-9]+ OffsetOperator [0-9]+ ')')?) / ([0-9]+ (OffsetOperator [0-9]+ OffsetOperator [0-9]+)?) / ([0-9]+ (OffsetOperator [0-9]+)?) / ('(' [0-9]+ WS? OffsetOperator WS? [0-9]+ ')' OffsetOperator [0-9]+ OffsetOperator [0-9]+) / ('(' [0-9]+ WS? OffsetOperator WS? [0-9]+ ')' OffsetOperator [0-9]+ !'x') / ('(' [0-9]+ WS? OffsetOperator WS? [0-9]+ ')') / ('(' [0-9]+ WS? OffsetOperator WS? [0-9]+ WS? OffsetOperator WS? [0-9]+ ')')) !([a-z] / [A-Z]))))> */
		func() bool {
			position836, tokenIndex836 := position, tokenIndex
			{
				position837 := position
				{
					position838, tokenIndex838 := position, tokenIndex
					if buffer[position] != rune('+') {
						goto l838
					}
					position++
					goto l839
				l838:
					position, tokenIndex = position838, tokenIndex838
				}
			l839:
				{
					position840, tokenIndex840 := position, tokenIndex
					if buffer[position] != rune('-') {
						goto l840
					}
					position++
					goto l841
				l840:
					position, tokenIndex = position840, tokenIndex840
				}
			l841:
				{
					position842, tokenIndex842 := position, tokenIndex
					if buffer[position] != rune('0') {
						goto l843
					}
					position++
					{
						position844, tokenIndex844 := position, tokenIndex
						if buffer[position] != rune('b') {
							goto l845
						}
						position++
						goto l844
					l845:
						position, tokenIndex = position844, tokenIndex844
						if buffer[position] != rune('B') {
							goto l843
						}
						position++
					}
				l844:
					{
						position848, tokenIndex848 := position, tokenIndex
						if buffer[position] != rune('0') {
							goto l849
						}
						position++
						goto l848
					l849:
						position, tokenIndex = position848, tokenIndex848
						if buffer[position] != rune('1') {
							goto l843
						}
						position++
					}
				l848:
				l846:
					{
						position847, tokenIndex847 := position, tokenIndex
						{
							position850, tokenIndex850 := position, tokenIndex
							if buffer[position] != rune('0') {
								goto l851
							}
							position++
							goto l850
						l851:
							position, tokenIndex = position850, tokenIndex850
							if buffer[position] != rune('1') {
								goto l847
							}
							position++
						}
					l850:
						goto l846
					l847:
						position, tokenIndex = position847, tokenIndex847
					}
					goto l842
				l843:
					position, tokenIndex = position842, tokenIndex842
					if buffer[position] != rune('0') {
						goto l852
					}
					position++
					{
						position853, tokenIndex853 := position, tokenIndex
						if buffer[position] != rune('x') {
							goto l854
						}
						position++
						goto l853
					l854:
						position, tokenIndex = position853, tokenIndex853
						if buffer[position] != rune('X') {
							goto l852
						}
						position++
					}
				l853:
					{
						position857, tokenIndex857 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l858
						}
						position++
						goto l857
					l858:
						position, tokenIndex = position857, tokenIndex857
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l859
						}
						position++
						goto l857
					l859:
						position, tokenIndex = position857, tokenIndex857
						{
							position860, tokenIndex860 := position, tokenIndex
							if c := buffer[position]; c < rune('a') || c > rune('f') {
								goto l861
							}
							position++
							goto l860
						l861:
							position, tokenIndex = position860, tokenIndex860
							if c := buffer[position]; c < rune('A') || c > rune('F') {
								goto l852
							}
							position++
						}
					l860:
					}
				l857:
				l855:
					{
						position856, tokenIndex856 := position, tokenIndex
						{
							position862, tokenIndex862 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l863
							}
							position++
							goto l862
						l863:
							position, tokenIndex = position862, tokenIndex862
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l864
							}
							position++
							goto l862
						l864:
							position, tokenIndex = position862, tokenIndex862
							{
								position865, tokenIndex865 := position, tokenIndex
								if c := buffer[position]; c < rune('a') || c > rune('f') {
									goto l866
								}
								position++
								goto l865
							l866:
								position, tokenIndex = position865, tokenIndex865
								if c := buffer[position]; c < rune('A') || c > rune('F') {
									goto l856
								}
								position++
							}
						l865:
						}
					l862:
						goto l855
					l856:
						position, tokenIndex = position856, tokenIndex856
					}
					goto l842
				l852:
					position, tokenIndex = position842, tokenIndex842
					{
						position867, tokenIndex867 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l868
						}
						position++
					l869:
						{
							position870, tokenIndex870 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l870
							}
							position++
							goto l869
						l870:
							position, tokenIndex = position870, tokenIndex870
						}
						if !_rules[ruleWS]() {
							goto l868
						}
						if !_rules[ruleOffsetOperator]() {
							goto l868
						}
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l868
						}
						position++
					l871:
						{
							position872, tokenIndex872 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l872
							}
							position++
							goto l871
						l872:
							position, tokenIndex = position872, tokenIndex872
						}
						goto l867
					l868:
						position, tokenIndex = position867, tokenIndex867
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l873
						}
						position++
					l874:
						{
							position875, tokenIndex875 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l875
							}
							position++
							goto l874
						l875:
							position, tokenIndex = position875, tokenIndex875
						}
						{
							position876, tokenIndex876 := position, tokenIndex
							if !_rules[ruleOffsetOperator]() {
								goto l876
							}
							if buffer[position] != rune('(') {
								goto l876
							}
							position++
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l876
							}
							position++
						l878:
							{
								position879, tokenIndex879 := position, tokenIndex
								if c := buffer[position]; c < rune('0') || c > rune('9') {
									goto l879
								}
								position++
								goto l878
							l879:
								position, tokenIndex = position879, tokenIndex879
							}
							if !_rules[ruleOffsetOperator]() {
								goto l876
							}
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l876
							}
							position++
						l880:
							{
								position881, tokenIndex881 := position, tokenIndex
								if c := buffer[position]; c < rune('0') || c > rune('9') {
									goto l881
								}
								position++
								goto l880
							l881:
								position, tokenIndex = position881, tokenIndex881
							}
							if buffer[position] != rune(')') {
								goto l876
							}
							position++
							goto l877
						l876:
							position, tokenIndex = position876, tokenIndex876
						}
					l877:
						goto l867
					l873:
						position, tokenIndex = position867, tokenIndex867
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l882
						}
						position++
					l883:
						{
							position884, tokenIndex884 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l884
							}
							position++
							goto l883
						l884:
							position, tokenIndex = position884, tokenIndex884
						}
						{
							position885, tokenIndex885 := position, tokenIndex
							if !_rules[ruleOffsetOperator]() {
								goto l885
							}
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l885
							}
							position++
						l887:
							{
								position888, tokenIndex888 := position, tokenIndex
								if c := buffer[position]; c < rune('0') || c > rune('9') {
									goto l888
								}
								position++
								goto l887
							l888:
								position, tokenIndex = position888, tokenIndex888
							}
							if !_rules[ruleOffsetOperator]() {
								goto l885
							}
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l885
							}
							position++
						l889:
							{
								position890, tokenIndex890 := position, tokenIndex
								if c := buffer[position]; c < rune('0') || c > rune('9') {
									goto l890
								}
								position++
								goto l889
							l890:
								position, tokenIndex = position890, tokenIndex890
							}
							goto l886
						l885:
							position, tokenIndex = position885, tokenIndex885
						}
					l886:
						goto l867
					l882:
						position, tokenIndex = position867, tokenIndex867
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l891
						}
						position++
					l892:
						{
							position893, tokenIndex893 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l893
							}
							position++
							goto l892
						l893:
							position, tokenIndex = position893, tokenIndex893
						}
						{
							position894, tokenIndex894 := position, tokenIndex
							if !_rules[ruleOffsetOperator]() {
								goto l894
							}
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l894
							}
							position++
						l896:
							{
								position897, tokenIndex897 := position, tokenIndex
								if c := buffer[position]; c < rune('0') || c > rune('9') {
									goto l897
								}
								position++
								goto l896
							l897:
								position, tokenIndex = position897, tokenIndex897
							}
							goto l895
						l894:
							position, tokenIndex = position894, tokenIndex894
						}
					l895:
						goto l867
					l891:
						position, tokenIndex = position867, tokenIndex867
						if buffer[position] != rune('(') {
							goto l898
						}
						position++
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l898
						}
						position++
					l899:
						{
							position900, tokenIndex900 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l900
							}
							position++
							goto l899
						l900:
							position, tokenIndex = position900, tokenIndex900
						}
						{
							position901, tokenIndex901 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l901
							}
							goto l902
						l901:
							position, tokenIndex = position901, tokenIndex901
						}
					l902:
						if !_rules[ruleOffsetOperator]() {
							goto l898
						}
						{
							position903, tokenIndex903 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l903
							}
							goto l904
						l903:
							position, tokenIndex = position903, tokenIndex903
						}
					l904:
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l898
						}
						position++
					l905:
						{
							position906, tokenIndex906 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l906
							}
							position++
							goto l905
						l906:
							position, tokenIndex = position906, tokenIndex906
						}
						if buffer[position] != rune(')') {
							goto l898
						}
						position++
						if !_rules[ruleOffsetOperator]() {
							goto l898
						}
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l898
						}
						position++
					l907:
						{
							position908, tokenIndex908 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l908
							}
							position++
							goto l907
						l908:
							position, tokenIndex = position908, tokenIndex908
						}
						if !_rules[ruleOffsetOperator]() {
							goto l898
						}
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l898
						}
						position++
					l909:
						{
							position910, tokenIndex910 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l910
							}
							position++
							goto l909
						l910:
							position, tokenIndex = position910, tokenIndex910
						}
						goto l867
					l898:
						position, tokenIndex = position867, tokenIndex867
						if buffer[position] != rune('(') {
							goto l911
						}
						position++
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l911
						}
						position++
					l912:
						{
							position913, tokenIndex913 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l913
							}
							position++
							goto l912
						l913:
							position, tokenIndex = position913, tokenIndex913
						}
						{
							position914, tokenIndex914 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l914
							}
							goto l915
						l914:
							position, tokenIndex = position914, tokenIndex914
						}
					l915:
						if !_rules[ruleOffsetOperator]() {
							goto l911
						}
						{
							position916, tokenIndex916 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l916
							}
							goto l917
						l916:
							position, tokenIndex = position916, tokenIndex916
						}
					l917:
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l911
						}
						position++
					l918:
						{
							position919, tokenIndex919 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l919
							}
							position++
							goto l918
						l919:
							position, tokenIndex = position919, tokenIndex919
						}
						if buffer[position] != rune(')') {
							goto l911
						}
						position++
						if !_rules[ruleOffsetOperator]() {
							goto l911
						}
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l911
						}
						position++
					l920:
						{
							position921, tokenIndex921 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l921
							}
							position++
							goto l920
						l921:
							position, tokenIndex = position921, tokenIndex921
						}
						{
							position922, tokenIndex922 := position, tokenIndex
							if buffer[position] != rune('x') {
								goto l922
							}
							position++
							goto l911
						l922:
							position, tokenIndex = position922, tokenIndex922
						}
						goto l867
					l911:
						position, tokenIndex = position867, tokenIndex867
						if buffer[position] != rune('(') {
							goto l923
						}
						position++
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l923
						}
						position++
					l924:
						{
							position925, tokenIndex925 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l925
							}
							position++
							goto l924
						l925:
							position, tokenIndex = position925, tokenIndex925
						}
						{
							position926, tokenIndex926 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l926
							}
							goto l927
						l926:
							position, tokenIndex = position926, tokenIndex926
						}
					l927:
						if !_rules[ruleOffsetOperator]() {
							goto l923
						}
						{
							position928, tokenIndex928 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l928
							}
							goto l929
						l928:
							position, tokenIndex = position928, tokenIndex928
						}
					l929:
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l923
						}
						position++
					l930:
						{
							position931, tokenIndex931 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l931
							}
							position++
							goto l930
						l931:
							position, tokenIndex = position931, tokenIndex931
						}
						if buffer[position] != rune(')') {
							goto l923
						}
						position++
						goto l867
					l923:
						position, tokenIndex = position867, tokenIndex867
						if buffer[position] != rune('(') {
							goto l836
						}
						position++
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l836
						}
						position++
					l932:
						{
							position933, tokenIndex933 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l933
							}
							position++
							goto l932
						l933:
							position, tokenIndex = position933, tokenIndex933
						}
						{
							position934, tokenIndex934 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l934
							}
							goto l935
						l934:
							position, tokenIndex = position934, tokenIndex934
						}
					l935:
						if !_rules[ruleOffsetOperator]() {
							goto l836
						}
						{
							position936, tokenIndex936 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l936
							}
							goto l937
						l936:
							position, tokenIndex = position936, tokenIndex936
						}
					l937:
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l836
						}
						position++
					l938:
						{
							position939, tokenIndex939 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l939
							}
							position++
							goto l938
						l939:
							position, tokenIndex = position939, tokenIndex939
						}
						{
							position940, tokenIndex940 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l940
							}
							goto l941
						l940:
							position, tokenIndex = position940, tokenIndex940
						}
					l941:
						if !_rules[ruleOffsetOperator]() {
							goto l836
						}
						{
							position942, tokenIndex942 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l942
							}
							goto l943
						l942:
							position, tokenIndex = position942, tokenIndex942
						}
					l943:
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l836
						}
						position++
					l944:
						{
							position945, tokenIndex945 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l945
							}
							position++
							goto l944
						l945:
							position, tokenIndex = position945, tokenIndex945
						}
						if buffer[position] != rune(')') {
							goto l836
						}
						position++
					}
				l867:
					{
						position946, tokenIndex946 := position, tokenIndex
						{
							position947, tokenIndex947 := position, tokenIndex
							if c := buffer[position]; c < rune('a') || c > rune('z') {
								goto l948
							}
							position++
							goto l947
						l948:
							position, tokenIndex = position947, tokenIndex947
							if c := buffer[position]; c < rune('A') || c > rune('Z') {
								goto l946
							}
							position++
						}
					l947:
						goto l836
					l946:
						position, tokenIndex = position946, tokenIndex946
					}
				}
			l842:
				add(ruleOffset, position837)
			}
			return true
		l836:
			position, tokenIndex = position836, tokenIndex836
			return false
		},
		/* 55 Section <- <([a-z] / [A-Z] / '@')+> */
		func() bool {
			position949, tokenIndex949 := position, tokenIndex
			{
				position950 := position
				{
					position953, tokenIndex953 := position, tokenIndex
					if c := buffer[position]; c < rune('a') || c > rune('z') {
						goto l954
					}
					position++
					goto l953
				l954:
					position, tokenIndex = position953, tokenIndex953
					if c := buffer[position]; c < rune('A') || c > rune('Z') {
						goto l955
					}
					position++
					goto l953
				l955:
					position, tokenIndex = position953, tokenIndex953
					if buffer[position] != rune('@') {
						goto l949
					}
					position++
				}
			l953:
			l951:
				{
					position952, tokenIndex952 := position, tokenIndex
					{
						position956, tokenIndex956 := position, tokenIndex
						if c := buffer[position]; c < rune('a') || c > rune('z') {
							goto l957
						}
						position++
						goto l956
					l957:
						position, tokenIndex = position956, tokenIndex956
						if c := buffer[position]; c < rune('A') || c > rune('Z') {
							goto l958
						}
						position++
						goto l956
					l958:
						position, tokenIndex = position956, tokenIndex956
						if buffer[position] != rune('@') {
							goto l952
						}
						position++
					}
				l956:
					goto l951
				l952:
					position, tokenIndex = position952, tokenIndex952
				}
				add(ruleSection, position950)
			}
			return true
		l949:
			position, tokenIndex = position949, tokenIndex949
			return false
		},
		/* 56 SegmentRegister <- <('%' ([c-g] / 's') ('s' ':'))> */
		func() bool {
			position959, tokenIndex959 := position, tokenIndex
			{
				position960 := position
				if buffer[position] != rune('%') {
					goto l959
				}
				position++
				{
					position961, tokenIndex961 := position, tokenIndex
					if c := buffer[position]; c < rune('c') || c > rune('g') {
						goto l962
					}
					position++
					goto l961
				l962:
					position, tokenIndex = position961, tokenIndex961
					if buffer[position] != rune('s') {
						goto l959
					}
					position++
				}
			l961:
				if buffer[position] != rune('s') {
					goto l959
				}
				position++
				if buffer[position] != rune(':') {
					goto l959
				}
				position++
				add(ruleSegmentRegister, position960)
			}
			return true
		l959:
			position, tokenIndex = position959, tokenIndex959
			return false
		},
	}
	p.rules = _rules
	return nil
}
